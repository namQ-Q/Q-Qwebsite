[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "testwebsite",
    "section": "",
    "text": "This is a Quarto website."
  },
  {
    "objectID": "index.html#홈페이지-첫-화면입니다.",
    "href": "index.html#홈페이지-첫-화면입니다.",
    "title": "testwebsite",
    "section": "홈페이지 첫 화면입니다.",
    "text": "홈페이지 첫 화면입니다.\n첫 방문을 환영합니다.\n\n테스트입니다."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "index.html#test입니다다",
    "href": "index.html#test입니다다",
    "title": "testwebsite",
    "section": "test입니다다",
    "text": "test입니다다"
  },
  {
    "objectID": "homework1.html",
    "href": "homework1.html",
    "title": "homework1",
    "section": "",
    "text": "Q1\n\nimport pandas as pd\ndf = pd.DataFrame({'제품'   : ['사과', '딸기', '수박'],\n                   '가격'   : [1800, 1500, 3000],\n                   '판매량' : [24, 38, 13]}\n)\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\nQ2\n\nsum(df['가격']) / 3         # 과일의 가격 평균\nsum(df['판매량']) / 3       # 판매량 평균균\n\n25.0"
  },
  {
    "objectID": "homework1.html#페이지-혼자서-해보기",
    "href": "homework1.html#페이지-혼자서-해보기",
    "title": "homework1",
    "section": "",
    "text": "Q1\n\nimport pandas as pd\ndf = pd.DataFrame({'제품'   : ['사과', '딸기', '수박'],\n                   '가격'   : [1800, 1500, 3000],\n                   '판매량' : [24, 38, 13]}\n)\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\nQ2\n\nsum(df['가격']) / 3         # 과일의 가격 평균\nsum(df['판매량']) / 3       # 판매량 평균균\n\n25.0"
  },
  {
    "objectID": "homework1.html#페이지-혼자서-해보기기",
    "href": "homework1.html#페이지-혼자서-해보기기",
    "title": "homework1",
    "section": "115페이지 혼자서 해보기기",
    "text": "115페이지 혼자서 해보기기\nQ1\n\nmpg = pd.read_csv('mpg.csv')\nmpg_copy = mpg.copy()\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\nQ2\n\nmpg_copy = mpg_copy.rename(columns = {'cty' : 'city',\n                                      'hwy' : 'highway'})\n\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "homework1.html#페이지-분석도전",
    "href": "homework1.html#페이지-분석도전",
    "title": "homework1",
    "section": "130페이지 분석도전",
    "text": "130페이지 분석도전\nQ1 midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nmid = pd.read_csv('midwest.csv')\nmid\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\nmid.shape\n\n(437, 28)\n\n\n\nmid.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\nmid.describe()\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\nQ2 poptotal변수를 total로, popasian변수를 asian으로 수정하세요\n\nmid = mid.rename(columns = {'poptotal' : 'total'})\nmid = mid.rename(columns = {'popasian' : 'asian'})\nmid.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\nQ3 total, asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nmid['asia_per'] = (mid['asian'] / mid['total']) * 100\nmid.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasia_per\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\nimport matplotlib.pyplot as plt\nmid['asia_per'].plot.hist()\nplt.show()\n\n\n\n\n\n\n\n\nQ4 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nasia_mean = mid['asia_per'].mean()\nasia_mean\n\n0.4872461834357345\n\n\n\nimport numpy as np\nmid['lar_sml'] = np.where(mid['asia_per'] &gt; asia_mean, 'large', 'small')\nmid['lar_sml'].head(10)\n\n0    small\n1    small\n2    small\n3    small\n4    small\n5    large\n6    small\n7    small\n8    small\n9    large\nName: lar_sml, dtype: object\n\n\nQ5 ’large’와 ’small’에 해당되는 지역이 얼마나 많은지 빈도ㅛ와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nplt.clf()\ncount = mid['lar_sml'].value_counts()\ncount\n\nsmall    318\nlarge    119\nName: lar_sml, dtype: int64\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\ncount.plot.bar(rot=0)\nplt.show()"
  },
  {
    "objectID": "homework2.html",
    "href": "homework2.html",
    "title": "homework2",
    "section": "",
    "text": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\nimport numpy as np\n\nmpg = pd.read_csv('mpg.csv')\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\nmpg_a = mpg.query('displ &lt;= 4')\nmpg_a['hwy'].mean()\n\n25.96319018404908\n\n\n\nmpg_b = mpg.query('displ &gt;= 5')\nmpg_b['hwy'].mean()\n\n18.07894736842105\n\n\n\nmpg_a['hwy'].mean() &gt; mpg_b['hwy'].mean()\n\nTrue\n\n\n\n\n\n자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ’audi’와 ’toyota’중 어느 manufacturer의 cty평균이 더 높은지 알아보세요.\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\nmpg_toyo = mpg.query('manufacturer == \"toyota\"')\n\n\nmpg_audi['cty'].mean() &lt; mpg_toyo['hwy'].mean()\n\nTrue\n\n\n\n\n\n‘chevrolet’, ‘fold’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\nmpg_new = mpg.query('manufacturer in [\"chevrolet\", \"fold\", \"honda\" ]')\n\nmpg_new['hwy'].mean()\n\n25.321428571428573"
  },
  {
    "objectID": "homework2.html#페이지-혼자서-해보기",
    "href": "homework2.html#페이지-혼자서-해보기",
    "title": "homework2",
    "section": "",
    "text": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\nimport numpy as np\n\nmpg = pd.read_csv('mpg.csv')\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\nmpg_a = mpg.query('displ &lt;= 4')\nmpg_a['hwy'].mean()\n\n25.96319018404908\n\n\n\nmpg_b = mpg.query('displ &gt;= 5')\nmpg_b['hwy'].mean()\n\n18.07894736842105\n\n\n\nmpg_a['hwy'].mean() &gt; mpg_b['hwy'].mean()\n\nTrue\n\n\n\n\n\n자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ’audi’와 ’toyota’중 어느 manufacturer의 cty평균이 더 높은지 알아보세요.\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\nmpg_toyo = mpg.query('manufacturer == \"toyota\"')\n\n\nmpg_audi['cty'].mean() &lt; mpg_toyo['hwy'].mean()\n\nTrue\n\n\n\n\n\n‘chevrolet’, ‘fold’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\nmpg_new = mpg.query('manufacturer in [\"chevrolet\", \"fold\", \"honda\" ]')\n\nmpg_new['hwy'].mean()\n\n25.321428571428573"
  },
  {
    "objectID": "homework2.html#페이지-혼자서-해보기-1",
    "href": "homework2.html#페이지-혼자서-해보기-1",
    "title": "homework2",
    "section": "153페이지 혼자서 해보기",
    "text": "153페이지 혼자서 해보기\n\nQ1\n’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당되는 자동차의 데이터를 출력하세요.\n\nmpg.query('manufacturer == \"audi\"') \\\n   .sort_values(\"hwy\", ascending = False) \\\n   .head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "homework2.html#페이지-혼자서-해보기-2",
    "href": "homework2.html#페이지-혼자서-해보기-2",
    "title": "homework2",
    "section": "158페이지 혼자서 해보기",
    "text": "158페이지 혼자서 해보기\n\nQ1\nmpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\nmpg_copy = mpg.copy()\nmpg_copy['sum'] = mpg_copy['cty'] + mpg_copy['hwy']\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n\n\n\n\n234 rows × 12 columns\n\n\n\n\n\nQ2\n앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.\n\nmpg_copy['mean'] = mpg_copy['sum'] /2\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns\n\n\n\n\n\nQ3\n’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nmpg_copy.sort_values('mean', ascending = False) \\\n        .head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n196\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n65\n32.5\n\n\n195\ntoyota\ncorolla\n1.8\n1999\n4\nmanual(m5)\nf\n26\n35\nr\ncompact\n61\n30.5\n\n\n\n\n\n\n\n\n\nQ4\n1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg원본을 이용하세요.\n\nmpg.assign(s_um = lambda x : x['hwy'] + x['cty'],\n           mean = lambda x : x['s_um'] /2) \\\n   .sort_values('mean', ascending = False) \\\n   .head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ns_um\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n196\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n65\n32.5\n\n\n195\ntoyota\ncorolla\n1.8\n1999\n4\nmanual(m5)\nf\n26\n35\nr\ncompact\n61\n30.5"
  },
  {
    "objectID": "posts/hw1/hw1.html",
    "href": "posts/hw1/hw1.html",
    "title": "homework1",
    "section": "",
    "text": "Q1\n\nimport pandas as pd\ndf = pd.DataFrame({'제품'   : ['사과', '딸기', '수박'],\n                   '가격'   : [1800, 1500, 3000],\n                   '판매량' : [24, 38, 13]}\n)\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\nQ2\n\nsum(df['가격']) / 3         # 과일의 가격 평균\nsum(df['판매량']) / 3       # 판매량 평균균\n\n25.0"
  },
  {
    "objectID": "posts/hw1/hw1.html#페이지-혼자서-해보기",
    "href": "posts/hw1/hw1.html#페이지-혼자서-해보기",
    "title": "homework1",
    "section": "",
    "text": "Q1\n\nimport pandas as pd\ndf = pd.DataFrame({'제품'   : ['사과', '딸기', '수박'],\n                   '가격'   : [1800, 1500, 3000],\n                   '판매량' : [24, 38, 13]}\n)\ndf\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\nQ2\n\nsum(df['가격']) / 3         # 과일의 가격 평균\nsum(df['판매량']) / 3       # 판매량 평균균\n\n25.0"
  },
  {
    "objectID": "posts/hw1/hw1.html#페이지-혼자서-해보기기",
    "href": "posts/hw1/hw1.html#페이지-혼자서-해보기기",
    "title": "homework1",
    "section": "115페이지 혼자서 해보기기",
    "text": "115페이지 혼자서 해보기기\nQ1\n\nmpg = pd.read_csv('mpg.csv')\nmpg_copy = mpg.copy()\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\nQ2\n\nmpg_copy = mpg_copy.rename(columns = {'cty' : 'city',\n                                      'hwy' : 'highway'})\n\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/hw1.html#페이지-분석도전",
    "href": "posts/hw1/hw1.html#페이지-분석도전",
    "title": "homework1",
    "section": "130페이지 분석도전",
    "text": "130페이지 분석도전\nQ1 midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\nmid = pd.read_csv('midwest.csv')\nmid\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\n...\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n19.631392\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n11.243308\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n17.033819\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n17.278954\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n14.475999\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n35.396784\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n16.549869\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n15.064584\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n24.995504\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n21.666382\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n\n\n\n\n437 rows × 28 columns\n\n\n\n\nmid.shape\n\n(437, 28)\n\n\n\nmid.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\nmid.describe()\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\nQ2 poptotal변수를 total로, popasian변수를 asian으로 수정하세요\n\nmid = mid.rename(columns = {'poptotal' : 'total'})\nmid = mid.rename(columns = {'popasian' : 'asian'})\nmid.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   total                 437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   asian                 437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\nQ3 total, asian변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\nmid['asia_per'] = (mid['asian'] / mid['total']) * 100\nmid.head()\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasia_per\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n\n\n5 rows × 29 columns\n\n\n\n\nimport matplotlib.pyplot as plt\nmid['asia_per'].plot.hist()\nplt.show()\n\n\n\n\n\n\n\n\nQ4 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 ‘large’, 그 외에는 ’small’을 부여한 파생변수를 만들어 보세요.\n\nasia_mean = mid['asia_per'].mean()\nasia_mean\n\nnp.float64(0.4872461834357345)\n\n\n\nimport numpy as np\nmid['lar_sml'] = np.where(mid['asia_per'] &gt; asia_mean, 'large', 'small')\nmid['lar_sml'].head(10)\n\n0    small\n1    small\n2    small\n3    small\n4    small\n5    large\n6    small\n7    small\n8    small\n9    large\nName: lar_sml, dtype: object\n\n\nQ5 ’large’와 ’small’에 해당되는 지역이 얼마나 많은지 빈도ㅛ와 빈도 막대 그래프를 만들어 확인해 보세요.\n\nplt.clf()\ncount = mid['lar_sml'].value_counts()\ncount\n\nlar_sml\nsmall    318\nlarge    119\nName: count, dtype: int64\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;\n\n\n\ncount.plot.bar(rot=0)\nplt.show()"
  },
  {
    "objectID": "posts/hw2/hw2.html",
    "href": "posts/hw2/hw2.html",
    "title": "homework2",
    "section": "",
    "text": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\nimport numpy as np\n\nmpg = pd.read_csv('mpg.csv')\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\nmpg_a = mpg.query('displ &lt;= 4')\nmpg_a['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\nmpg_b = mpg.query('displ &gt;= 5')\nmpg_b['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n\nmpg_a['hwy'].mean() &gt; mpg_b['hwy'].mean()\n\nnp.True_\n\n\n\n\n\n자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ’audi’와 ’toyota’중 어느 manufacturer의 cty평균이 더 높은지 알아보세요.\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\nmpg_toyo = mpg.query('manufacturer == \"toyota\"')\n\n\nmpg_audi['cty'].mean() &lt; mpg_toyo['hwy'].mean()\n\nnp.True_\n\n\n\n\n\n‘chevrolet’, ‘fold’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\nmpg_new = mpg.query('manufacturer in [\"chevrolet\", \"fold\", \"honda\" ]')\n\nmpg_new['hwy'].mean()\n\nnp.float64(25.321428571428573)"
  },
  {
    "objectID": "posts/hw2/hw2.html#페이지-혼자서-해보기",
    "href": "posts/hw2/hw2.html#페이지-혼자서-해보기",
    "title": "homework2",
    "section": "",
    "text": "자동차 배기량에 따라 고속도로 연비가 다른지 알아보려고 합니다. displ(배기량)이 4 이하인 자동차와 5 이상인 자동차 중 어떤 자동차의 hwy(고속도로 연비) 평균이 더 높은지 알아보세요.\n\nimport pandas as pd\nimport numpy as np\n\nmpg = pd.read_csv('mpg.csv')\nmpg.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n\n\n\n\n\n\nmpg_a = mpg.query('displ &lt;= 4')\nmpg_a['hwy'].mean()\n\nnp.float64(25.96319018404908)\n\n\n\nmpg_b = mpg.query('displ &gt;= 5')\nmpg_b['hwy'].mean()\n\nnp.float64(18.07894736842105)\n\n\n\nmpg_a['hwy'].mean() &gt; mpg_b['hwy'].mean()\n\nnp.True_\n\n\n\n\n\n자동차 제조 회사에 따라 도시 연비가 어떻게 다른지 알아보려고 합니다. ’audi’와 ’toyota’중 어느 manufacturer의 cty평균이 더 높은지 알아보세요.\n\nmpg_audi = mpg.query('manufacturer == \"audi\"')\nmpg_toyo = mpg.query('manufacturer == \"toyota\"')\n\n\nmpg_audi['cty'].mean() &lt; mpg_toyo['hwy'].mean()\n\nnp.True_\n\n\n\n\n\n‘chevrolet’, ‘fold’, ‘honda’ 자동차의 고속도로 연비 평균을 알아보려고 합니다. 세 회사의 데이터를 추출한 다음 hwy 전체 평균을 구해 보세요.\n\nmpg_new = mpg.query('manufacturer in [\"chevrolet\", \"fold\", \"honda\" ]')\n\nmpg_new['hwy'].mean()\n\nnp.float64(25.321428571428573)"
  },
  {
    "objectID": "posts/hw2/hw2.html#페이지-혼자서-해보기-1",
    "href": "posts/hw2/hw2.html#페이지-혼자서-해보기-1",
    "title": "homework2",
    "section": "153페이지 혼자서 해보기",
    "text": "153페이지 혼자서 해보기\n\nQ1\n’audi’에서 생산한 자동차 중에 어떤 자동차 모델의 hwy가 높은지 알아보려고 합니다. ’audi’에서 생산한 자동차 중 hwy가 1~5위에 해당되는 자동차의 데이터를 출력하세요.\n\nmpg.query('manufacturer == \"audi\"') \\\n   .sort_values(\"hwy\", ascending = False) \\\n   .head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\n\n\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n9\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "posts/hw2/hw2.html#페이지-혼자서-해보기-2",
    "href": "posts/hw2/hw2.html#페이지-혼자서-해보기-2",
    "title": "homework2",
    "section": "158페이지 혼자서 해보기",
    "text": "158페이지 혼자서 해보기\n\nQ1\nmpg 데이터 복사본을 만들고, cty와 hwy를 더한 ’합산 연비 변수’를 추가하세요.\n\nmpg_copy = mpg.copy()\nmpg_copy['sum'] = mpg_copy['cty'] + mpg_copy['hwy']\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n\n\n\n\n234 rows × 12 columns\n\n\n\n\n\nQ2\n앞에서 만든 ’합산 연비 변수’를 2로 나눠 ’평균 연비 변수’를 추가하세요.\n\nmpg_copy['mean'] = mpg_copy['sum'] /2\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum\nmean\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns\n\n\n\n\n\nQ3\n’평균 연비 변수’가 가장 높은 자동차 3종의 데이터를 출력하세요.\n\nmpg_copy.sort_values('mean', ascending = False) \\\n        .head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\nsum\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n196\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n65\n32.5\n\n\n197\ntoyota\ncorolla\n1.8\n2008\n4\nauto(l4)\nf\n26\n35\nr\ncompact\n61\n30.5\n\n\n\n\n\n\n\n\n\nQ4\n1~3번 문제를 해결할 수 있는 하나로 연결된 pandas 구문을 만들어 실행해 보세요. 데이터는 복사본 대신 mpg원본을 이용하세요.\n\nmpg.assign(s_um = lambda x : x['hwy'] + x['cty'],\n           mean = lambda x : x['s_um'] /2) \\\n   .sort_values('mean', ascending = False) \\\n   .head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\ncategory\ns_um\nmean\n\n\n\n\n221\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n212\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n196\ntoyota\ncorolla\n1.8\n2008\n4\nmanual(m5)\nf\n28\n37\nr\ncompact\n65\n32.5\n\n\n197\ntoyota\ncorolla\n1.8\n2008\n4\nauto(l4)\nf\n26\n35\nr\ncompact\n61\n30.5"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "hw Dummy",
    "section": "",
    "text": "homework4\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 25, 2024\n\n\n강남규\n\n\n\n\n\n\n\n\n\n\n\n\nproject1 - 기역조\n\n\n\n\n\n\nproject\n\n\n\n\n\n\n\n\n\nJul 24, 2024\n\n\n강남규, 권효은, 김연예진, 김연진\n\n\n\n\n\n\n\n\n\n\n\n\nhomework1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 12, 2024\n\n\n강남규\n\n\n\n\n\n\n\n\n\n\n\n\nhomework2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 12, 2024\n\n\n강남규\n\n\n\n\n\n\n\n\n\n\n\n\nhomework3\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 12, 2024\n\n\n강남규\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "hw3.html",
    "href": "hw3.html",
    "title": "homework3",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('mpg.csv')\nmid = pd.read_csv('midwest.csv')"
  },
  {
    "objectID": "hw3.html#패키지-데이터-불러오기",
    "href": "hw3.html#패키지-데이터-불러오기",
    "title": "homework3",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('mpg.csv')\nmid = pd.read_csv('midwest.csv')"
  },
  {
    "objectID": "hw3.html#페이지-혼자서-해보기",
    "href": "hw3.html#페이지-혼자서-해보기",
    "title": "homework3",
    "section": "204페이지 혼자서 해보기",
    "text": "204페이지 혼자서 해보기\n\nQ1\nmpg데이터의 cty와 hwy간에 어떤 관계가 있는지 알아보려고 합니다. x축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.\n\nsns.scatterplot(data = mpg, x = 'cty', y = 'hwy')\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2\n미국의 지역별 인구통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal, y축은 popasian으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.\n\nsns.scatterplot(data = mid, x = 'poptotal', y = 'popasian') \\\n   .set(xlim = [0,500000], ylim = [0,10000])\nplt.show()"
  },
  {
    "objectID": "hw3.html#페이지-혼자서-해보기-1",
    "href": "hw3.html#페이지-혼자서-해보기-1",
    "title": "homework3",
    "section": "211페이지 혼자서 해보기",
    "text": "211페이지 혼자서 해보기\n\nQ1\n어떤 회사에서 생산한 ’suv’차종의 도시 연비가 높은지 알아보려고 합니다. ’suv’차종을 대상으로 cty 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 순으로 정렬하세요.\n\ndf = mpg.groupby('manufacturer', as_index = False) \\\n        .agg(mpg_mean = ('cty', 'mean')) \\\n        .sort_values('mpg_mean', ascending = False) \\\n        .head()\nsns.barplot(data = df, x = 'manufacturer', y = 'mpg_mean', hue = 'manufacturer')\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2\n자동차 중에 어떤 category가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.\n\ndf2 = mpg.groupby('category', as_index = False) \\\n         .agg(count = ('category', 'count')) \\\n         .sort_values('count', ascending = False)\nsns.barplot(data = df2, x = 'category', y = 'count', hue = 'category')\nplt.show()"
  },
  {
    "objectID": "posts/hw3/hw3.html",
    "href": "posts/hw3/hw3.html",
    "title": "homework3",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('mpg.csv')\nmid = pd.read_csv('midwest.csv')"
  },
  {
    "objectID": "posts/hw3/hw3.html#패키지-데이터-불러오기",
    "href": "posts/hw3/hw3.html#패키지-데이터-불러오기",
    "title": "homework3",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nmpg = pd.read_csv('mpg.csv')\nmid = pd.read_csv('midwest.csv')"
  },
  {
    "objectID": "posts/hw3/hw3.html#페이지-혼자서-해보기",
    "href": "posts/hw3/hw3.html#페이지-혼자서-해보기",
    "title": "homework3",
    "section": "204페이지 혼자서 해보기",
    "text": "204페이지 혼자서 해보기\n\nQ1\nmpg데이터의 cty와 hwy간에 어떤 관계가 있는지 알아보려고 합니다. x축은 cty, y축은 hwy로 된 산점도를 만들어 보세요.\n\nsns.scatterplot(data = mpg, x = 'cty', y = 'hwy')\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2\n미국의 지역별 인구통계 정보를 담은 midwest.csv를 이용해 전체 인구와 아시아인 인구 간에 어떤 관계가 있는지 알아보려고 합니다. x축은 poptotal, y축은 popasian으로 된 산점도를 만들어 보세요. 전체 인구는 50만 명 이하, 아시아인 인구는 1만 명 이하인 지역만 산점도에 표시되게 설정하세요.\n\nsns.scatterplot(data = mid, x = 'poptotal', y = 'popasian') \\\n   .set(xlim = [0,500000], ylim = [0,10000])\nplt.show()"
  },
  {
    "objectID": "posts/hw3/hw3.html#페이지-혼자서-해보기-1",
    "href": "posts/hw3/hw3.html#페이지-혼자서-해보기-1",
    "title": "homework3",
    "section": "211페이지 혼자서 해보기",
    "text": "211페이지 혼자서 해보기\n\nQ1\n어떤 회사에서 생산한 ’suv’차종의 도시 연비가 높은지 알아보려고 합니다. ’suv’차종을 대상으로 cty 평균이 가장 높은 회사 다섯 곳을 막대 그래프로 표현해 보세요. 막대는 연비가 높은 순으로 정렬하세요.\n\ndf = mpg.groupby('manufacturer', as_index = False) \\\n        .agg(mpg_mean = ('cty', 'mean')) \\\n        .sort_values('mpg_mean', ascending = False) \\\n        .head()\nsns.barplot(data = df, x = 'manufacturer', y = 'mpg_mean', hue = 'manufacturer')\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2\n자동차 중에 어떤 category가 많은지 알아보려고 합니다. sns.barplot()을 이용해 자동차 종류별 빈도를 표현한 막대 그래프를 만들어 보세요. 막대는 빈도가 높은 순으로 정렬하세요.\n\ndf2 = mpg.groupby('category', as_index = False) \\\n         .agg(count = ('category', 'count')) \\\n         .sort_values('count', ascending = False)\nsns.barplot(data = df2, x = 'category', y = 'count', hue = 'category')\nplt.show()"
  },
  {
    "objectID": "posts/hw4/hw4.html",
    "href": "posts/hw4/hw4.html",
    "title": "homework4",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nimport math\n!pip install scipy\nfrom scipy.stats import norm\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nDefaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: scipy in c:\\users\\user\\appdata\\roaming\\python\\python312\\site-packages (1.14.0)\nRequirement already satisfied: numpy&lt;2.3,&gt;=1.23.5 in c:\\users\\user\\appdata\\roaming\\python\\python312\\site-packages (from scipy) (2.0.1)"
  },
  {
    "objectID": "posts/hw4/hw4.html#청년층과-비청년층-사이에-출산율-차이가-얼마나-날까",
    "href": "posts/hw4/hw4.html#청년층과-비청년층-사이에-출산율-차이가-얼마나-날까",
    "title": "project1 - 기역조",
    "section": "1. 청년층과 비청년층 사이에 출산율 차이가 얼마나 날까?",
    "text": "1. 청년층과 비청년층 사이에 출산율 차이가 얼마나 날까?"
  },
  {
    "objectID": "posts/hw4/hw4.html#청년층의-시도별",
    "href": "posts/hw4/hw4.html#청년층의-시도별",
    "title": "project1 - 기역조",
    "section": "2. 청년층의 시도별",
    "text": "2. 청년층의 시도별\n원본 데이터 불러오기 및 리스트 초기화\n\nimport pandas as pd\nimport numpy as np\n\ndf = pd.read_csv(\"bs.csv\")\nbefore_name = []\nafter_name = []\nlst_mean12_19 = []\n\ndf\n\n\n\n\n\n\n\n\n시군구별\n2012\n2012.1\n2012.2\n2012.3\n2012.4\n2012.5\n2012.6\n2013\n2013.1\n...\n2021.4\n2021.5\n2021.6\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n\n\n\n\n0\n시군구별\n모의 연령별출산율:15-19세\n20-24세\n25-29세\n30-34세\n35-39세\n40-44세\n45-49세\n모의 연령별출산율:15-19세\n20-24세\n...\n35-39세\n40-44세\n45-49세\n모의 연령별출산율:15-19세\n20-24세\n25-29세\n30-34세\n35-39세\n40-44세\n45-49세\n\n\n1\n전국\n1.8\n16.0\n77.4\n121.9\n39.0\n4.9\n0.2\n1.7\n14.0\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n2\n서울특별시\n1.2\n7.9\n49.2\n108.0\n42.0\n5.4\n0.2\n1.2\n7.1\n...\n43.9\n8.3\n0.2\n0.2\n1.4\n9.9\n53.5\n43.4\n8.7\n0.2\n\n\n3\n부산광역시\n1.6\n11.1\n59.0\n113.9\n38.0\n4.6\n0.2\n1.8\n10.9\n...\n41.6\n7.2\n0.1\n0.3\n3.0\n19.2\n70.5\n42.3\n7.6\n0.1\n\n\n4\n대구광역시\n1.1\n12.4\n70.0\n122.0\n35.5\n3.8\n0.1\n1.6\n10.4\n...\n41.1\n6.3\n0.1\n0.2\n3.3\n23.6\n75.4\n39.7\n6.9\n0.1\n\n\n5\n인천광역시\n1.8\n15.6\n79.1\n120.2\n39.6\n5.0\n0.2\n1.7\n13.8\n...\n42.1\n7.7\n0.2\n0.4\n4.5\n24.3\n67.9\n43.1\n8.0\n0.2\n\n\n6\n광주광역시\n1.9\n16.8\n78.9\n122.0\n36.1\n4.5\n0.2\n1.7\n14.0\n...\n45.2\n7.3\n0.3\n0.4\n4.1\n28.8\n80.6\n45.1\n7.4\n0.2\n\n\n7\n대전광역시\n2.3\n16.1\n79.8\n122.7\n38.2\n5.1\n0.2\n1.9\n14.4\n...\n41.9\n6.8\n0.2\n0.3\n5.0\n26.8\n78.5\n47.4\n8.3\n0.2\n\n\n8\n울산광역시\n1.4\n16.4\n102.6\n139.9\n35.5\n3.8\n0.1\n1.8\n14.5\n...\n39.7\n6.6\n0.1\n0.6\n4.4\n31.6\n87.5\n37.5\n6.5\n0.1\n\n\n9\n세종특별자치시\n2.2\n29.3\n101.1\n141.9\n38.0\n7.8\n0.0\n1.7\n23.3\n...\n58.4\n8.6\n0.1\n0.4\n6.1\n40.5\n112.6\n55.7\n9.3\n0.1\n\n\n10\n경기도\n1.5\n16.3\n83.1\n126.4\n40.1\n5.0\n0.2\n1.4\n13.6\n...\n45.6\n7.9\n0.2\n0.3\n4.0\n25.7\n80.0\n47.8\n8.7\n0.2\n\n\n11\n강원도\n2.3\n21.0\n93.9\n117.2\n35.3\n5.1\n0.2\n2.4\n19.1\n...\n43.1\n7.3\n0.2\n0.6\n8.2\n43.1\n86.8\n44.8\n8.4\n0.2\n\n\n12\n충청북도\n2.6\n23.8\n104.4\n127.5\n35.9\n4.3\n0.2\n2.2\n21.9\n...\n40.8\n6.3\n0.2\n0.5\n7.5\n37.9\n81.6\n38.9\n6.2\n0.2\n\n\n13\n충청남도\n2.8\n29.3\n113.0\n130.6\n34.9\n4.9\n0.2\n2.4\n25.1\n...\n40.8\n7.0\n0.2\n0.5\n7.6\n41.9\n83.7\n40.1\n6.9\n0.2\n\n\n14\n전라북도\n2.6\n23.4\n96.2\n122.7\n37.2\n5.5\n0.2\n2.3\n20.1\n...\n40.3\n7.3\n0.2\n0.6\n5.8\n30.6\n77.4\n40.2\n6.8\n0.2\n\n\n15\n전라남도\n2.7\n28.8\n113.6\n137.5\n39.8\n5.6\n0.2\n2.9\n24.3\n...\n44.5\n7.8\n0.2\n0.5\n8.1\n40.5\n88.2\n45.8\n8.2\n0.2\n\n\n16\n경상북도\n2.1\n23.6\n101.8\n132.0\n35.4\n4.4\n0.2\n2.4\n20.8\n...\n42.8\n7.6\n0.1\n0.5\n6.3\n38.2\n89.0\n42.5\n7.7\n0.2\n\n\n17\n경상남도\n2.1\n19.8\n103.5\n136.9\n36.3\n4.5\n0.1\n1.8\n17.4\n...\n39.5\n6.5\n0.2\n0.4\n5.3\n33.2\n82.3\n38.0\n6.5\n0.1\n\n\n18\n제주특별자치도\n2.5\n23.2\n98.9\n136.5\n50.8\n8.0\n0.5\n2.6\n21.8\n...\n47.6\n10.7\n0.4\n0.6\n5.6\n34.2\n82.5\n49.0\n10.0\n0.2\n\n\n\n\n19 rows × 78 columns\n\n\n\n\nbefore_name: 변경 전 이름 List\nafter_name: 변경 후 이름 List\nlst_mean12_19: 12 ~ 19년도 청년층의 시도별 모의 출산율 평균 Series List\n\n이름 변경을 위한 문자열 추가\nEX) “2020” → “20_1519”: 20년도 15 ~ 19세\n“2020.1” → “20_2024”: 20년도 20 ~ 24세\n\nfor i in range(12, 23):\n  before_name.append(\"20\" + str(i))\n  before_name.append(\"20\" + str(i) + \".1\")\n  before_name.append(\"20\" + str(i) + \".2\")\n  before_name.append(\"20\" + str(i) + \".3\")\n  before_name.append(\"20\" + str(i) + \".4\")\n  before_name.append(\"20\" + str(i) + \".5\")\n  before_name.append(\"20\" + str(i) + \".6\")\n  after_name.append(str(i) + \"_1519\")\n  after_name.append(str(i) + \"_2024\")\n  after_name.append(str(i) + \"_2529\")\n  after_name.append(str(i) + \"_3034\")\n  after_name.append(str(i) + \"_3539\")\n  after_name.append(str(i) + \"_4044\")\n  after_name.append(str(i) + \"_4549\")\n\nprint(\"before_name: \" + str(before_name) + \"\\n\" + \"after_name: \" + str(after_name))\n\nbefore_name: ['2012', '2012.1', '2012.2', '2012.3', '2012.4', '2012.5', '2012.6', '2013', '2013.1', '2013.2', '2013.3', '2013.4', '2013.5', '2013.6', '2014', '2014.1', '2014.2', '2014.3', '2014.4', '2014.5', '2014.6', '2015', '2015.1', '2015.2', '2015.3', '2015.4', '2015.5', '2015.6', '2016', '2016.1', '2016.2', '2016.3', '2016.4', '2016.5', '2016.6', '2017', '2017.1', '2017.2', '2017.3', '2017.4', '2017.5', '2017.6', '2018', '2018.1', '2018.2', '2018.3', '2018.4', '2018.5', '2018.6', '2019', '2019.1', '2019.2', '2019.3', '2019.4', '2019.5', '2019.6', '2020', '2020.1', '2020.2', '2020.3', '2020.4', '2020.5', '2020.6', '2021', '2021.1', '2021.2', '2021.3', '2021.4', '2021.5', '2021.6', '2022', '2022.1', '2022.2', '2022.3', '2022.4', '2022.5', '2022.6']\nafter_name: ['12_1519', '12_2024', '12_2529', '12_3034', '12_3539', '12_4044', '12_4549', '13_1519', '13_2024', '13_2529', '13_3034', '13_3539', '13_4044', '13_4549', '14_1519', '14_2024', '14_2529', '14_3034', '14_3539', '14_4044', '14_4549', '15_1519', '15_2024', '15_2529', '15_3034', '15_3539', '15_4044', '15_4549', '16_1519', '16_2024', '16_2529', '16_3034', '16_3539', '16_4044', '16_4549', '17_1519', '17_2024', '17_2529', '17_3034', '17_3539', '17_4044', '17_4549', '18_1519', '18_2024', '18_2529', '18_3034', '18_3539', '18_4044', '18_4549', '19_1519', '19_2024', '19_2529', '19_3034', '19_3539', '19_4044', '19_4549', '20_1519', '20_2024', '20_2529', '20_3034', '20_3539', '20_4044', '20_4549', '21_1519', '21_2024', '21_2529', '21_3034', '21_3539', '21_4044', '21_4549', '22_1519', '22_2024', '22_2529', '22_3034', '22_3539', '22_4044', '22_4549']\n\n\n복사본 br을 만들고, 열을 통합하기 위해 0번 열을 제거함\nEX) 2020 + 15 ~ 19세 → 20_1519\n0번 열을 제거하여 1번부터 시작하므로, 추후 인덱싱 작업을 위해 .reset_index을 사용하여 재정렬\n\nbr = df.copy()\nbr.drop(0, inplace = True)\nbr.reset_index(drop = True, inplace = True)\nbr\n\n\n\n\n\n\n\n\n시군구별\n2012\n2012.1\n2012.2\n2012.3\n2012.4\n2012.5\n2012.6\n2013\n2013.1\n...\n2021.4\n2021.5\n2021.6\n2022\n2022.1\n2022.2\n2022.3\n2022.4\n2022.5\n2022.6\n\n\n\n\n0\n전국\n1.8\n16.0\n77.4\n121.9\n39.0\n4.9\n0.2\n1.7\n14.0\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n1\n서울특별시\n1.2\n7.9\n49.2\n108.0\n42.0\n5.4\n0.2\n1.2\n7.1\n...\n43.9\n8.3\n0.2\n0.2\n1.4\n9.9\n53.5\n43.4\n8.7\n0.2\n\n\n2\n부산광역시\n1.6\n11.1\n59.0\n113.9\n38.0\n4.6\n0.2\n1.8\n10.9\n...\n41.6\n7.2\n0.1\n0.3\n3.0\n19.2\n70.5\n42.3\n7.6\n0.1\n\n\n3\n대구광역시\n1.1\n12.4\n70.0\n122.0\n35.5\n3.8\n0.1\n1.6\n10.4\n...\n41.1\n6.3\n0.1\n0.2\n3.3\n23.6\n75.4\n39.7\n6.9\n0.1\n\n\n4\n인천광역시\n1.8\n15.6\n79.1\n120.2\n39.6\n5.0\n0.2\n1.7\n13.8\n...\n42.1\n7.7\n0.2\n0.4\n4.5\n24.3\n67.9\n43.1\n8.0\n0.2\n\n\n5\n광주광역시\n1.9\n16.8\n78.9\n122.0\n36.1\n4.5\n0.2\n1.7\n14.0\n...\n45.2\n7.3\n0.3\n0.4\n4.1\n28.8\n80.6\n45.1\n7.4\n0.2\n\n\n6\n대전광역시\n2.3\n16.1\n79.8\n122.7\n38.2\n5.1\n0.2\n1.9\n14.4\n...\n41.9\n6.8\n0.2\n0.3\n5.0\n26.8\n78.5\n47.4\n8.3\n0.2\n\n\n7\n울산광역시\n1.4\n16.4\n102.6\n139.9\n35.5\n3.8\n0.1\n1.8\n14.5\n...\n39.7\n6.6\n0.1\n0.6\n4.4\n31.6\n87.5\n37.5\n6.5\n0.1\n\n\n8\n세종특별자치시\n2.2\n29.3\n101.1\n141.9\n38.0\n7.8\n0.0\n1.7\n23.3\n...\n58.4\n8.6\n0.1\n0.4\n6.1\n40.5\n112.6\n55.7\n9.3\n0.1\n\n\n9\n경기도\n1.5\n16.3\n83.1\n126.4\n40.1\n5.0\n0.2\n1.4\n13.6\n...\n45.6\n7.9\n0.2\n0.3\n4.0\n25.7\n80.0\n47.8\n8.7\n0.2\n\n\n10\n강원도\n2.3\n21.0\n93.9\n117.2\n35.3\n5.1\n0.2\n2.4\n19.1\n...\n43.1\n7.3\n0.2\n0.6\n8.2\n43.1\n86.8\n44.8\n8.4\n0.2\n\n\n11\n충청북도\n2.6\n23.8\n104.4\n127.5\n35.9\n4.3\n0.2\n2.2\n21.9\n...\n40.8\n6.3\n0.2\n0.5\n7.5\n37.9\n81.6\n38.9\n6.2\n0.2\n\n\n12\n충청남도\n2.8\n29.3\n113.0\n130.6\n34.9\n4.9\n0.2\n2.4\n25.1\n...\n40.8\n7.0\n0.2\n0.5\n7.6\n41.9\n83.7\n40.1\n6.9\n0.2\n\n\n13\n전라북도\n2.6\n23.4\n96.2\n122.7\n37.2\n5.5\n0.2\n2.3\n20.1\n...\n40.3\n7.3\n0.2\n0.6\n5.8\n30.6\n77.4\n40.2\n6.8\n0.2\n\n\n14\n전라남도\n2.7\n28.8\n113.6\n137.5\n39.8\n5.6\n0.2\n2.9\n24.3\n...\n44.5\n7.8\n0.2\n0.5\n8.1\n40.5\n88.2\n45.8\n8.2\n0.2\n\n\n15\n경상북도\n2.1\n23.6\n101.8\n132.0\n35.4\n4.4\n0.2\n2.4\n20.8\n...\n42.8\n7.6\n0.1\n0.5\n6.3\n38.2\n89.0\n42.5\n7.7\n0.2\n\n\n16\n경상남도\n2.1\n19.8\n103.5\n136.9\n36.3\n4.5\n0.1\n1.8\n17.4\n...\n39.5\n6.5\n0.2\n0.4\n5.3\n33.2\n82.3\n38.0\n6.5\n0.1\n\n\n17\n제주특별자치도\n2.5\n23.2\n98.9\n136.5\n50.8\n8.0\n0.5\n2.6\n21.8\n...\n47.6\n10.7\n0.4\n0.6\n5.6\n34.2\n82.5\n49.0\n10.0\n0.2\n\n\n\n\n18 rows × 78 columns\n\n\n\n의미를 통합하기 위해, 전체 열의 이름을 변경\nbefore_name의 길이 만큼 구문을 반복 (len(before_name) = 77이므로, i에는 0에서 77까지의 수가 들어감)\nEX) br의 열 이름이 before_name[0]에서 after_name[0]으로 변경 “2020” → “20_1519”\n\nfor i in range(0, len(before_name)):\n  br.rename(columns = {before_name[i] : after_name[i]}, inplace = True)\n\nprint(br.head(5))\n\n    시군구별 12_1519 12_2024 12_2529 12_3034 12_3539 12_4044 12_4549 13_1519  \\\n0     전국     1.8    16.0    77.4   121.9    39.0     4.9     0.2     1.7   \n1  서울특별시     1.2     7.9    49.2   108.0    42.0     5.4     0.2     1.2   \n2  부산광역시     1.6    11.1    59.0   113.9    38.0     4.6     0.2     1.8   \n3  대구광역시     1.1    12.4    70.0   122.0    35.5     3.8     0.1     1.6   \n4  인천광역시     1.8    15.6    79.1   120.2    39.6     5.0     0.2     1.7   \n\n  13_2024  ... 21_3539 21_4044 21_4549 22_1519 22_2024 22_2529 22_3034  \\\n0    14.0  ...    43.5     7.6     0.2     0.4     4.1    24.0    73.5   \n1     7.1  ...    43.9     8.3     0.2     0.2     1.4     9.9    53.5   \n2    10.9  ...    41.6     7.2     0.1     0.3     3.0    19.2    70.5   \n3    10.4  ...    41.1     6.3     0.1     0.2     3.3    23.6    75.4   \n4    13.8  ...    42.1     7.7     0.2     0.4     4.5    24.3    67.9   \n\n  22_3539 22_4044 22_4549  \n0    44.1     8.0     0.2  \n1    43.4     8.7     0.2  \n2    42.3     7.6     0.1  \n3    39.7     6.9     0.1  \n4    43.1     8.0     0.2  \n\n[5 rows x 78 columns]\n\n\n데이터의 타입이 문자열이므로, 계산을 위해 Type을 float64로 변경함\n\nbr[after_name] = br[after_name].apply(pd.to_numeric)\n\ntype(br[\"12_1519\"][6])\n\nnumpy.float64\n\n\n20 ~ 22년까지 최근 3년의 청년층(20 ~ 34세) 모의 연령별 출산율의 평균을 계산하여 열로 추가\n\nbr = br.assign(\n  mean20 = (br[\"20_2024\"] + br[\"20_2529\"] + br[\"20_3034\"]) / 3,\n  mean21 = (br[\"21_2024\"] + br[\"21_2529\"] + br[\"21_3034\"]) / 3,\n  mean22 = (br[\"22_2024\"] + br[\"22_2529\"] + br[\"22_3034\"]) / 3)\n  \nbr.head(5)\nbr\n\n\n\n\n\n\n\n\n시군구별\n12_1519\n12_2024\n12_2529\n12_3034\n12_3539\n12_4044\n12_4549\n13_1519\n13_2024\n...\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\nmean20\nmean21\nmean22\n\n\n\n\n0\n전국\n1.8\n16.0\n77.4\n121.9\n39.0\n4.9\n0.2\n1.7\n14.0\n...\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n38.566667\n36.200000\n33.866667\n\n\n1\n서울특별시\n1.2\n7.9\n49.2\n108.0\n42.0\n5.4\n0.2\n1.2\n7.1\n...\n0.2\n1.4\n9.9\n53.5\n43.4\n8.7\n0.2\n25.700000\n23.833333\n21.600000\n\n\n2\n부산광역시\n1.6\n11.1\n59.0\n113.9\n38.0\n4.6\n0.2\n1.8\n10.9\n...\n0.3\n3.0\n19.2\n70.5\n42.3\n7.6\n0.1\n33.933333\n31.633333\n30.900000\n\n\n3\n대구광역시\n1.1\n12.4\n70.0\n122.0\n35.5\n3.8\n0.1\n1.6\n10.4\n...\n0.2\n3.3\n23.6\n75.4\n39.7\n6.9\n0.1\n38.100000\n35.466667\n34.100000\n\n\n4\n인천광역시\n1.8\n15.6\n79.1\n120.2\n39.6\n5.0\n0.2\n1.7\n13.8\n...\n0.4\n4.5\n24.3\n67.9\n43.1\n8.0\n0.2\n38.033333\n34.600000\n32.233333\n\n\n5\n광주광역시\n1.9\n16.8\n78.9\n122.0\n36.1\n4.5\n0.2\n1.7\n14.0\n...\n0.4\n4.1\n28.8\n80.6\n45.1\n7.4\n0.2\n37.233333\n41.033333\n37.833333\n\n\n6\n대전광역시\n2.3\n16.1\n79.8\n122.7\n38.2\n5.1\n0.2\n1.9\n14.4\n...\n0.3\n5.0\n26.8\n78.5\n47.4\n8.3\n0.2\n37.366667\n36.833333\n36.766667\n\n\n7\n울산광역시\n1.4\n16.4\n102.6\n139.9\n35.5\n3.8\n0.1\n1.8\n14.5\n...\n0.6\n4.4\n31.6\n87.5\n37.5\n6.5\n0.1\n49.700000\n46.500000\n41.166667\n\n\n8\n세종특별자치시\n2.2\n29.3\n101.1\n141.9\n38.0\n7.8\n0.0\n1.7\n23.3\n...\n0.4\n6.1\n40.5\n112.6\n55.7\n9.3\n0.1\n64.233333\n63.000000\n53.066667\n\n\n9\n경기도\n1.5\n16.3\n83.1\n126.4\n40.1\n5.0\n0.2\n1.4\n13.6\n...\n0.3\n4.0\n25.7\n80.0\n47.8\n8.7\n0.2\n40.500000\n38.366667\n36.566667\n\n\n10\n강원도\n2.3\n21.0\n93.9\n117.2\n35.3\n5.1\n0.2\n2.4\n19.1\n...\n0.6\n8.2\n43.1\n86.8\n44.8\n8.4\n0.2\n51.300000\n47.566667\n46.033333\n\n\n11\n충청북도\n2.6\n23.8\n104.4\n127.5\n35.9\n4.3\n0.2\n2.2\n21.9\n...\n0.5\n7.5\n37.9\n81.6\n38.9\n6.2\n0.2\n48.733333\n46.600000\n42.333333\n\n\n12\n충청남도\n2.8\n29.3\n113.0\n130.6\n34.9\n4.9\n0.2\n2.4\n25.1\n...\n0.5\n7.6\n41.9\n83.7\n40.1\n6.9\n0.2\n52.100000\n47.533333\n44.400000\n\n\n13\n전라북도\n2.6\n23.4\n96.2\n122.7\n37.2\n5.5\n0.2\n2.3\n20.1\n...\n0.6\n5.8\n30.6\n77.4\n40.2\n6.8\n0.2\n43.600000\n39.766667\n37.933333\n\n\n14\n전라남도\n2.7\n28.8\n113.6\n137.5\n39.8\n5.6\n0.2\n2.9\n24.3\n...\n0.5\n8.1\n40.5\n88.2\n45.8\n8.2\n0.2\n56.266667\n49.333333\n45.600000\n\n\n15\n경상북도\n2.1\n23.6\n101.8\n132.0\n35.4\n4.4\n0.2\n2.4\n20.8\n...\n0.5\n6.3\n38.2\n89.0\n42.5\n7.7\n0.2\n49.566667\n46.733333\n44.500000\n\n\n16\n경상남도\n2.1\n19.8\n103.5\n136.9\n36.3\n4.5\n0.1\n1.8\n17.4\n...\n0.4\n5.3\n33.2\n82.3\n38.0\n6.5\n0.1\n46.933333\n44.000000\n40.266667\n\n\n17\n제주특별자치도\n2.5\n23.2\n98.9\n136.5\n50.8\n8.0\n0.5\n2.6\n21.8\n...\n0.6\n5.6\n34.2\n82.5\n49.0\n10.0\n0.2\n47.300000\n43.000000\n40.766667\n\n\n\n\n18 rows × 81 columns\n\n\n\n2012 ~ 2019년까지의 청년층 평균은 중간 계산을 위한 데이터이므로, 열로 추가하지 않고 List로 보관 (각 요소는 Series)\nrange(0, 56, 7) Start: 0, End: 55, Step: 7이므로 0, 7, 14, 21 …이 i로 들어감\n1519, 2024, 2529, 3034, 3539, 4044, 4549 연령 구간이 총 7개이므로, i가 1519 인덱스에 있을 때 i + 1(2024), i + 2(2529) i + 3(3034)을 해야 청년층에 해당하는 이름을 가져올 수 있음\n처음 i = 0일 때 12년도를 계산하고, 다음 i = 7에서는 13년도 계산을 수행함\nEX) 12년도의 청년층 평균 계산: “12_1519” + “12_2024” + “12_2529” / 3\n결과로 나온 평균을 lst_mean12_19 리스트에 요소로 추가\n따라서, lst_mean12_19에는 12 ~ 19년도 청년층의 시도별 모의 출산율 평균 Series List가 들어 있음\n(br[\"mean12\"], br[\"mean13\"], br[\"mean14\"] …에 해당하는 Series를 열로 추가하지 않고 리스트에 보관했다고 생각)\n\nfor i in range(0, 56, 7):\n  lst_mean12_19.append((br[after_name[i + 1]] + br[after_name[i + 2]] + br[after_name[i + 3]]) / 3)\n\nlst_mean12_19\n\n[0     71.766667\n 1     55.033333\n 2     61.333333\n 3     68.133333\n 4     71.633333\n 5     72.566667\n 6     72.866667\n 7     86.300000\n 8     90.766667\n 9     75.266667\n 10    77.366667\n 11    85.233333\n 12    90.966667\n 13    80.766667\n 14    93.300000\n 15    85.800000\n 16    86.733333\n 17    86.200000\n dtype: float64,\n 0     63.766667\n 1     48.533333\n 2     54.900000\n 3     61.200000\n 4     64.100000\n 5     63.933333\n 6     66.966667\n 7     78.000000\n 8     80.566667\n 9     66.133333\n 10    68.633333\n 11    76.100000\n 12    80.900000\n 13    72.300000\n 14    84.200000\n 15    77.033333\n 16    76.733333\n 17    75.000000\n dtype: float64,\n 0     63.433333\n 1     48.233333\n 2     55.866667\n 3     61.700000\n 4     63.533333\n 5     63.733333\n 6     66.233333\n 7     78.500000\n 8     74.333333\n 9     65.600000\n 10    67.966667\n 11    75.000000\n 12    78.700000\n 13    71.633333\n 14    82.166667\n 15    77.066667\n 16    77.033333\n 17    76.966667\n dtype: float64,\n 0      64.100000\n 1      48.300000\n 2      57.133333\n 3      63.033333\n 4      63.000000\n 5      62.833333\n 6      66.700000\n 7      80.333333\n 8     102.833333\n 9      65.866667\n 10     69.766667\n 11     76.400000\n 12     81.100000\n 13     71.533333\n 14     83.333333\n 15     79.000000\n 16     77.433333\n 17     74.433333\n dtype: float64,\n 0     59.333333\n 1     44.000000\n 2     53.666667\n 3     60.233333\n 4     58.133333\n 5     59.633333\n 6     60.500000\n 7     74.533333\n 8     96.800000\n 9     60.633333\n 10    65.066667\n 11    72.300000\n 12    74.800000\n 13    65.466667\n 14    76.966667\n 15    74.000000\n 16    71.533333\n 17    70.166667\n dtype: float64,\n 0     51.733333\n 1     37.466667\n 2     46.566667\n 3     53.133333\n 4     49.533333\n 5     52.233333\n 6     53.266667\n 7     65.266667\n 8     87.733333\n 9     52.700000\n 10    57.866667\n 11    63.600000\n 12    66.966667\n 13    58.500000\n 14    67.900000\n 15    64.800000\n 16    63.133333\n 17    63.600000\n dtype: float64,\n 0     46.866667\n 1     32.933333\n 2     41.666667\n 3     47.833333\n 4     48.233333\n 5     46.966667\n 6     46.233333\n 7     57.200000\n 8     80.633333\n 9     48.033333\n 10    53.733333\n 11    59.866667\n 12    61.600000\n 13    51.433333\n 14    62.300000\n 15    58.833333\n 16    57.166667\n 17    58.300000\n dtype: float64,\n 0     43.000000\n 1     29.633333\n 2     37.766667\n 3     44.700000\n 4     43.900000\n 5     43.366667\n 6     41.900000\n 7     54.500000\n 8     74.833333\n 9     44.166667\n 10    54.100000\n 11    52.666667\n 12    56.566667\n 13    47.600000\n 14    60.933333\n 15    54.266667\n 16    52.100000\n 17    53.400000\n dtype: float64]\n\n\n각 시도별 청년층 모의 출산율의 평균이 전국 청년층 평균과 비교하여 큰지 작은지 비교\n12 ~ 19년은 lst_mean12_19 리스트를 활용해 계산\nrange(12, 20)으로 i에 12, 13, 14, … 19가 들어감\n“compare12” ~ “compare19” 열을 추가하고, 시도별 평균과 전체 평균을 비교함\nEX) i = 12일 때 lst_mean12_19[0].mean() &lt;= lst_mean12_19[0]: 12년도 전체 평균(숫자) &lt;= 12년도 시도별 평균(Series)을 비교함\n\nfor i in range(12, 20):\n  br[\"compare\" + str(i)] = np.where(lst_mean12_19[i - 12].mean() &lt;= lst_mean12_19[i - 12], \"large\", \"small\")\n\nprint(br.head(5))\n\n    시군구별  12_1519  12_2024  12_2529  12_3034  12_3539  12_4044  12_4549  \\\n0     전국      1.8     16.0     77.4    121.9     39.0      4.9      0.2   \n1  서울특별시      1.2      7.9     49.2    108.0     42.0      5.4      0.2   \n2  부산광역시      1.6     11.1     59.0    113.9     38.0      4.6      0.2   \n3  대구광역시      1.1     12.4     70.0    122.0     35.5      3.8      0.1   \n4  인천광역시      1.8     15.6     79.1    120.2     39.6      5.0      0.2   \n\n   13_1519  13_2024  ...     mean21     mean22  compare12  compare13  \\\n0      1.7     14.0  ...  36.200000  33.866667      small      small   \n1      1.2      7.1  ...  23.833333  21.600000      small      small   \n2      1.8     10.9  ...  31.633333  30.900000      small      small   \n3      1.6     10.4  ...  35.466667  34.100000      small      small   \n4      1.7     13.8  ...  34.600000  32.233333      small      small   \n\n   compare14  compare15  compare16  compare17  compare18  compare19  \n0      small      small      small      small      small      small  \n1      small      small      small      small      small      small  \n2      small      small      small      small      small      small  \n3      small      small      small      small      small      small  \n4      small      small      small      small      small      small  \n\n[5 rows x 89 columns]\n\n\n최근 3년의 평균은 List가 아닌 DataFrame의 열로 가지고 있으므로, 추출하여 비교 계산\n\nbr[\"compare20\"] = np.where(br[\"mean20\"].mean() &lt;= br[\"mean20\"], \"large\", \"small\")\nbr[\"compare21\"] = np.where(br[\"mean21\"].mean() &lt;= br[\"mean21\"], \"large\", \"small\")\nbr[\"compare22\"] = np.where(br[\"mean22\"].mean() &lt;= br[\"mean22\"], \"large\", \"small\")\n\nbr.head(5)\n\n\n\n\n\n\n\n\n시군구별\n12_1519\n12_2024\n12_2529\n12_3034\n12_3539\n12_4044\n12_4549\n13_1519\n13_2024\n...\ncompare13\ncompare14\ncompare15\ncompare16\ncompare17\ncompare18\ncompare19\ncompare20\ncompare21\ncompare22\n\n\n\n\n0\n전국\n1.8\n16.0\n77.4\n121.9\n39.0\n4.9\n0.2\n1.7\n14.0\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n1\n서울특별시\n1.2\n7.9\n49.2\n108.0\n42.0\n5.4\n0.2\n1.2\n7.1\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n2\n부산광역시\n1.6\n11.1\n59.0\n113.9\n38.0\n4.6\n0.2\n1.8\n10.9\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n3\n대구광역시\n1.1\n12.4\n70.0\n122.0\n35.5\n3.8\n0.1\n1.6\n10.4\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n4\n인천광역시\n1.8\n15.6\n79.1\n120.2\n39.6\n5.0\n0.2\n1.7\n13.8\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n\n\n5 rows × 92 columns\n\n\n\n\nbr\n\n\n\n\n\n\n\n\n시군구별\n12_1519\n12_2024\n12_2529\n12_3034\n12_3539\n12_4044\n12_4549\n13_1519\n13_2024\n...\ncompare13\ncompare14\ncompare15\ncompare16\ncompare17\ncompare18\ncompare19\ncompare20\ncompare21\ncompare22\n\n\n\n\n0\n전국\n1.8\n16.0\n77.4\n121.9\n39.0\n4.9\n0.2\n1.7\n14.0\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n1\n서울특별시\n1.2\n7.9\n49.2\n108.0\n42.0\n5.4\n0.2\n1.2\n7.1\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n2\n부산광역시\n1.6\n11.1\n59.0\n113.9\n38.0\n4.6\n0.2\n1.8\n10.9\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n3\n대구광역시\n1.1\n12.4\n70.0\n122.0\n35.5\n3.8\n0.1\n1.6\n10.4\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n4\n인천광역시\n1.8\n15.6\n79.1\n120.2\n39.6\n5.0\n0.2\n1.7\n13.8\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n5\n광주광역시\n1.9\n16.8\n78.9\n122.0\n36.1\n4.5\n0.2\n1.7\n14.0\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n6\n대전광역시\n2.3\n16.1\n79.8\n122.7\n38.2\n5.1\n0.2\n1.9\n14.4\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n7\n울산광역시\n1.4\n16.4\n102.6\n139.9\n35.5\n3.8\n0.1\n1.8\n14.5\n...\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\n\n\n8\n세종특별자치시\n2.2\n29.3\n101.1\n141.9\n38.0\n7.8\n0.0\n1.7\n23.3\n...\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\n\n\n9\n경기도\n1.5\n16.3\n83.1\n126.4\n40.1\n5.0\n0.2\n1.4\n13.6\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n10\n강원도\n2.3\n21.0\n93.9\n117.2\n35.3\n5.1\n0.2\n2.4\n19.1\n...\nsmall\nsmall\nsmall\nsmall\nsmall\nlarge\nlarge\nlarge\nlarge\nlarge\n\n\n11\n충청북도\n2.6\n23.8\n104.4\n127.5\n35.9\n4.3\n0.2\n2.2\n21.9\n...\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\n\n\n12\n충청남도\n2.8\n29.3\n113.0\n130.6\n34.9\n4.9\n0.2\n2.4\n25.1\n...\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\n\n\n13\n전라북도\n2.6\n23.4\n96.2\n122.7\n37.2\n5.5\n0.2\n2.3\n20.1\n...\nlarge\nlarge\nlarge\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\nsmall\n\n\n14\n전라남도\n2.7\n28.8\n113.6\n137.5\n39.8\n5.6\n0.2\n2.9\n24.3\n...\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\n\n\n15\n경상북도\n2.1\n23.6\n101.8\n132.0\n35.4\n4.4\n0.2\n2.4\n20.8\n...\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\n\n\n16\n경상남도\n2.1\n19.8\n103.5\n136.9\n36.3\n4.5\n0.1\n1.8\n17.4\n...\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\n\n\n17\n제주특별자치도\n2.5\n23.2\n98.9\n136.5\n50.8\n8.0\n0.5\n2.6\n21.8\n...\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\nlarge\n\n\n\n\n18 rows × 92 columns\n\n\n\n20-22년도 데이터 추출\n전국 모의 연령별 출산율을 비교하기 위해 iloc 함수를 이용하여 0번째 행만 추출 데이터프레임으로 제대로 나왔는지 확인하기 위해 type()을 사용 2020년부터 2022년까지 지난 3년치 데이터를 한 번에 묶어 청년과 비청년 출산율을 비교하려고 함 그래서 2020 ~ 2022년도까지의 데이터를 추출하기 위해 iloc 함수를 사용 해당 데이터가 어느 열에 있는지 확인하기 위해 br2.info() 사용용 그 후 행은 그대로 출력하고 열은 57번째 78번째까지 데이터 추출\n\nbr2 = br.iloc[[0]]\ntype(br2[\"21_2024\"][0])\nbr2.info()\nbr2 = br2.iloc[:, 57:78] \n\n\nbr2\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 1 entries, 0 to 0\nData columns (total 92 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   시군구별       1 non-null      object \n 1   12_1519    1 non-null      float64\n 2   12_2024    1 non-null      float64\n 3   12_2529    1 non-null      float64\n 4   12_3034    1 non-null      float64\n 5   12_3539    1 non-null      float64\n 6   12_4044    1 non-null      float64\n 7   12_4549    1 non-null      float64\n 8   13_1519    1 non-null      float64\n 9   13_2024    1 non-null      float64\n 10  13_2529    1 non-null      float64\n 11  13_3034    1 non-null      float64\n 12  13_3539    1 non-null      float64\n 13  13_4044    1 non-null      float64\n 14  13_4549    1 non-null      float64\n 15  14_1519    1 non-null      float64\n 16  14_2024    1 non-null      float64\n 17  14_2529    1 non-null      float64\n 18  14_3034    1 non-null      float64\n 19  14_3539    1 non-null      float64\n 20  14_4044    1 non-null      float64\n 21  14_4549    1 non-null      float64\n 22  15_1519    1 non-null      float64\n 23  15_2024    1 non-null      float64\n 24  15_2529    1 non-null      float64\n 25  15_3034    1 non-null      float64\n 26  15_3539    1 non-null      float64\n 27  15_4044    1 non-null      float64\n 28  15_4549    1 non-null      float64\n 29  16_1519    1 non-null      float64\n 30  16_2024    1 non-null      float64\n 31  16_2529    1 non-null      float64\n 32  16_3034    1 non-null      float64\n 33  16_3539    1 non-null      float64\n 34  16_4044    1 non-null      float64\n 35  16_4549    1 non-null      float64\n 36  17_1519    1 non-null      float64\n 37  17_2024    1 non-null      float64\n 38  17_2529    1 non-null      float64\n 39  17_3034    1 non-null      float64\n 40  17_3539    1 non-null      float64\n 41  17_4044    1 non-null      float64\n 42  17_4549    1 non-null      float64\n 43  18_1519    1 non-null      float64\n 44  18_2024    1 non-null      float64\n 45  18_2529    1 non-null      float64\n 46  18_3034    1 non-null      float64\n 47  18_3539    1 non-null      float64\n 48  18_4044    1 non-null      float64\n 49  18_4549    1 non-null      float64\n 50  19_1519    1 non-null      float64\n 51  19_2024    1 non-null      float64\n 52  19_2529    1 non-null      float64\n 53  19_3034    1 non-null      float64\n 54  19_3539    1 non-null      float64\n 55  19_4044    1 non-null      float64\n 56  19_4549    1 non-null      float64\n 57  20_1519    1 non-null      float64\n 58  20_2024    1 non-null      float64\n 59  20_2529    1 non-null      float64\n 60  20_3034    1 non-null      float64\n 61  20_3539    1 non-null      float64\n 62  20_4044    1 non-null      float64\n 63  20_4549    1 non-null      float64\n 64  21_1519    1 non-null      float64\n 65  21_2024    1 non-null      float64\n 66  21_2529    1 non-null      float64\n 67  21_3034    1 non-null      float64\n 68  21_3539    1 non-null      float64\n 69  21_4044    1 non-null      float64\n 70  21_4549    1 non-null      float64\n 71  22_1519    1 non-null      float64\n 72  22_2024    1 non-null      float64\n 73  22_2529    1 non-null      float64\n 74  22_3034    1 non-null      float64\n 75  22_3539    1 non-null      float64\n 76  22_4044    1 non-null      float64\n 77  22_4549    1 non-null      float64\n 78  mean20     1 non-null      float64\n 79  mean21     1 non-null      float64\n 80  mean22     1 non-null      float64\n 81  compare12  1 non-null      object \n 82  compare13  1 non-null      object \n 83  compare14  1 non-null      object \n 84  compare15  1 non-null      object \n 85  compare16  1 non-null      object \n 86  compare17  1 non-null      object \n 87  compare18  1 non-null      object \n 88  compare19  1 non-null      object \n 89  compare20  1 non-null      object \n 90  compare21  1 non-null      object \n 91  compare22  1 non-null      object \ndtypes: float64(80), object(12)\nmemory usage: 852.0+ bytes\n\n\n\n\n\n\n\n\n\n20_1519\n20_2024\n20_2529\n20_3034\n20_3539\n20_4044\n20_4549\n21_1519\n21_2024\n21_2529\n...\n21_3539\n21_4044\n21_4549\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\n\n\n\n\n0\n0.7\n6.2\n30.6\n78.9\n42.3\n7.1\n0.2\n0.4\n5.0\n27.5\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n\n\n1 rows × 21 columns\n\n\n\n보기 쉽게 만들기 위해 행렬을 뒤집는 transpose 함수 사용\n\nbr2 = br2.transpose()\nbr2\n\n\n\n\n\n\n\n\n0\n\n\n\n\n20_1519\n0.7\n\n\n20_2024\n6.2\n\n\n20_2529\n30.6\n\n\n20_3034\n78.9\n\n\n20_3539\n42.3\n\n\n20_4044\n7.1\n\n\n20_4549\n0.2\n\n\n21_1519\n0.4\n\n\n21_2024\n5.0\n\n\n21_2529\n27.5\n\n\n21_3034\n76.1\n\n\n21_3539\n43.5\n\n\n21_4044\n7.6\n\n\n21_4549\n0.2\n\n\n22_1519\n0.4\n\n\n22_2024\n4.1\n\n\n22_2529\n24.0\n\n\n22_3034\n73.5\n\n\n22_3539\n44.1\n\n\n22_4044\n8.0\n\n\n22_4549\n0.2\n\n\n\n\n\n\n\n새로운 변수명 설정\n0으로 되어 있던 변수를 모의 연령별출산율을 의미하는 birth_rate로 표시 맨 첫 번째 열 이름이 지정되어 있지 않아서 year이라는 변수로 지정하기 위해 reset_index 사용 rest_index 사용시 기존의 인덱스가 새로운 열로 추가되고, 새로운 기본 인덱스가 생성됨\n\nbr2 = br2.rename(columns = {0 : 'birth_rate'})\nbr2 = br2.rename_axis(columns = {'' : 'year'}, index = None)\nbr2\nbr2 = br2.reset_index().rename(columns={'index': 'year'})\n\n청년층과 비청년층을 구분하고자 조건에 따라 값을 선택할 수 있는 np.where 함수 사용 number라는 변수에 청년층 (20-34세) 데이터를 1로 할당하고 그렇지 않은 경우 2로 할당\n\nbr2['number'] = np.where(br2['year']\\\n                  .isin(['20_2024', '20_2529', '20_3034', '21_2024', '21_2529', '21_3034', '22_2024', '22_2529', '22_3034']), 1, 2)\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\nnumber\n\n\n\n\n0\n20_1519\n0.7\n2\n\n\n1\n20_2024\n6.2\n1\n\n\n2\n20_2529\n30.6\n1\n\n\n3\n20_3034\n78.9\n1\n\n\n4\n20_3539\n42.3\n2\n\n\n5\n20_4044\n7.1\n2\n\n\n6\n20_4549\n0.2\n2\n\n\n7\n21_1519\n0.4\n2\n\n\n8\n21_2024\n5.0\n1\n\n\n9\n21_2529\n27.5\n1\n\n\n10\n21_3034\n76.1\n1\n\n\n11\n21_3539\n43.5\n2\n\n\n12\n21_4044\n7.6\n2\n\n\n13\n21_4549\n0.2\n2\n\n\n14\n22_1519\n0.4\n2\n\n\n15\n22_2024\n4.1\n1\n\n\n16\n22_2529\n24.0\n1\n\n\n17\n22_3034\n73.5\n1\n\n\n18\n22_3539\n44.1\n2\n\n\n19\n22_4044\n8.0\n2\n\n\n20\n22_4549\n0.2\n2\n\n\n\n\n\n\n\n청년, 비청년 출산율비교 청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n결과값: 2020년부터 2022년도까지의 청년(20-34) 모의 출산율: 36.211, 2020년부터 2022년도까지의 비청년(15-19, 35-49) 모의 출산율: 12.891\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nbr2_youth_rate\nbr2_non_youth_rate\n\nnp.float64(12.891666666666666)\n\n\n20-22와 같은 코드로 12-14년도 청년층과 비청년층 출산율 비교\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\nbr3\n\nbr3 = br3.transpose()\nbr3.info\nbr3\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), '1', '2')\nbr3\n\nbr3.info()\nbr3['number'] = br3['number'].apply(pd.to_numeric)\nbr3\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nbr3_youth_rate\nbr3_non_youth_rate\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 20 entries, 0 to 19\nData columns (total 3 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   year        20 non-null     object \n 1   birth_rate  20 non-null     float64\n 2   number      20 non-null     object \ndtypes: float64(1), object(2)\nmemory usage: 612.0+ bytes\n\n\nnp.float64(12.909090909090908)\n\n\n그래프 표현 12-14년도와 20-22년도도 청년층과 비청년층의 출산율 비교를 위해 막대 그래프로 표현 X축에 분류 기준을 입력한 후, y 축에는 출생율 평균 삽입입\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.barplot(x=['12_14Youth', '20_22Youth','12_14Non-Youth', '20_22Non-Youth'], y=[br3_youth_rate,br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate])\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n지금 청년층의 출산율이 낮아지는데 지역별로 청년층의 출산율 감소 근황을 보자\n**\n\nbr[['시군구별', \"mean20\"]].sort_values(\"mean20\", ascending = False).head()\nbr[['시군구별', \"mean21\"]].sort_values(\"mean21\", ascending = False).head()\nbr[['시군구별', \"mean22\"]].sort_values(\"mean22\", ascending = False).head()\n\nbr[['시군구별', \"mean20\"]].sort_values(\"mean20\").head()\nbr[['시군구별', \"mean21\"]].sort_values(\"mean21\").head()\nbr[['시군구별', \"mean22\"]].sort_values(\"mean22\").head()\n\n\n\n\n\n\n\n\n시군구별\nmean22\n\n\n\n\n1\n서울특별시\n21.600000\n\n\n2\n부산광역시\n30.900000\n\n\n4\n인천광역시\n32.233333\n\n\n0\n전국\n33.866667\n\n\n3\n대구광역시\n34.100000\n\n\n\n\n\n\n\n각 도시 청년층의 평균모의출산율 그래프\n\nimport matplotlib.pyplot as plt\nplt.clf()\nbr[\"mean20\"].plot.bar()\nplt.show()\n\n\n\n\n\n\n\n\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\nimport matplotlib.pyplot as plt\nplt.clf()\nbr[\"mean21\"].plot.bar()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nplt.clf()\nbr[\"mean22\"].plot.bar()\nplt.show()"
  },
  {
    "objectID": "posts/hw4/hw4.html#년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "href": "posts/hw4/hw4.html#년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "title": "project1 - 기역조",
    "section": "8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?",
    "text": "8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?\n20-22년도 데이터 추출\n전국 모의 연령별 출산율을 비교하기 위해 iloc 함수를 이용하여 0번째 행만 추출 데이터프레임으로 제대로 나왔는지 확인하기 위해 type()을 사용 2020년부터 2022년까지 지난 3년치 데이터를 한 번에 묶어 청년과 비청년 출산율을 비교하려고 함 그래서 2020 ~ 2022년도까지의 데이터를 추출하기 위해 iloc 함수를 사용 해당 데이터가 어느 열에 있는지 확인하기 위해 br2.info() 사용용 그 후 행은 그대로 출력하고 열은 57번째 78번째까지 데이터 추출\n\nbr2 = br.iloc[[0]]\ntype(br2[\"21_2024\"][0])\nbr2.info()\nbr2 = br2.iloc[:, 57:78] \n\n\nbr2\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 1 entries, 0 to 0\nData columns (total 92 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   시군구별       1 non-null      object \n 1   12_1519    1 non-null      float64\n 2   12_2024    1 non-null      float64\n 3   12_2529    1 non-null      float64\n 4   12_3034    1 non-null      float64\n 5   12_3539    1 non-null      float64\n 6   12_4044    1 non-null      float64\n 7   12_4549    1 non-null      float64\n 8   13_1519    1 non-null      float64\n 9   13_2024    1 non-null      float64\n 10  13_2529    1 non-null      float64\n 11  13_3034    1 non-null      float64\n 12  13_3539    1 non-null      float64\n 13  13_4044    1 non-null      float64\n 14  13_4549    1 non-null      float64\n 15  14_1519    1 non-null      float64\n 16  14_2024    1 non-null      float64\n 17  14_2529    1 non-null      float64\n 18  14_3034    1 non-null      float64\n 19  14_3539    1 non-null      float64\n 20  14_4044    1 non-null      float64\n 21  14_4549    1 non-null      float64\n 22  15_1519    1 non-null      float64\n 23  15_2024    1 non-null      float64\n 24  15_2529    1 non-null      float64\n 25  15_3034    1 non-null      float64\n 26  15_3539    1 non-null      float64\n 27  15_4044    1 non-null      float64\n 28  15_4549    1 non-null      float64\n 29  16_1519    1 non-null      float64\n 30  16_2024    1 non-null      float64\n 31  16_2529    1 non-null      float64\n 32  16_3034    1 non-null      float64\n 33  16_3539    1 non-null      float64\n 34  16_4044    1 non-null      float64\n 35  16_4549    1 non-null      float64\n 36  17_1519    1 non-null      float64\n 37  17_2024    1 non-null      float64\n 38  17_2529    1 non-null      float64\n 39  17_3034    1 non-null      float64\n 40  17_3539    1 non-null      float64\n 41  17_4044    1 non-null      float64\n 42  17_4549    1 non-null      float64\n 43  18_1519    1 non-null      float64\n 44  18_2024    1 non-null      float64\n 45  18_2529    1 non-null      float64\n 46  18_3034    1 non-null      float64\n 47  18_3539    1 non-null      float64\n 48  18_4044    1 non-null      float64\n 49  18_4549    1 non-null      float64\n 50  19_1519    1 non-null      float64\n 51  19_2024    1 non-null      float64\n 52  19_2529    1 non-null      float64\n 53  19_3034    1 non-null      float64\n 54  19_3539    1 non-null      float64\n 55  19_4044    1 non-null      float64\n 56  19_4549    1 non-null      float64\n 57  20_1519    1 non-null      float64\n 58  20_2024    1 non-null      float64\n 59  20_2529    1 non-null      float64\n 60  20_3034    1 non-null      float64\n 61  20_3539    1 non-null      float64\n 62  20_4044    1 non-null      float64\n 63  20_4549    1 non-null      float64\n 64  21_1519    1 non-null      float64\n 65  21_2024    1 non-null      float64\n 66  21_2529    1 non-null      float64\n 67  21_3034    1 non-null      float64\n 68  21_3539    1 non-null      float64\n 69  21_4044    1 non-null      float64\n 70  21_4549    1 non-null      float64\n 71  22_1519    1 non-null      float64\n 72  22_2024    1 non-null      float64\n 73  22_2529    1 non-null      float64\n 74  22_3034    1 non-null      float64\n 75  22_3539    1 non-null      float64\n 76  22_4044    1 non-null      float64\n 77  22_4549    1 non-null      float64\n 78  mean20     1 non-null      float64\n 79  mean21     1 non-null      float64\n 80  mean22     1 non-null      float64\n 81  compare12  1 non-null      object \n 82  compare13  1 non-null      object \n 83  compare14  1 non-null      object \n 84  compare15  1 non-null      object \n 85  compare16  1 non-null      object \n 86  compare17  1 non-null      object \n 87  compare18  1 non-null      object \n 88  compare19  1 non-null      object \n 89  compare20  1 non-null      object \n 90  compare21  1 non-null      object \n 91  compare22  1 non-null      object \ndtypes: float64(80), object(12)\nmemory usage: 852.0+ bytes\n\n\n\n\n\n\n\n\n\n20_1519\n20_2024\n20_2529\n20_3034\n20_3539\n20_4044\n20_4549\n21_1519\n21_2024\n21_2529\n...\n21_3539\n21_4044\n21_4549\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\n\n\n\n\n0\n0.7\n6.2\n30.6\n78.9\n42.3\n7.1\n0.2\n0.4\n5.0\n27.5\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n\n\n1 rows × 21 columns\n\n\n\n보기 쉽게 만들기 위해 행렬을 뒤집는 transpose 함수 사용\n\nbr2 = br2.transpose()\nbr2\n\n\n\n\n\n\n\n\n0\n\n\n\n\n20_1519\n0.7\n\n\n20_2024\n6.2\n\n\n20_2529\n30.6\n\n\n20_3034\n78.9\n\n\n20_3539\n42.3\n\n\n20_4044\n7.1\n\n\n20_4549\n0.2\n\n\n21_1519\n0.4\n\n\n21_2024\n5.0\n\n\n21_2529\n27.5\n\n\n21_3034\n76.1\n\n\n21_3539\n43.5\n\n\n21_4044\n7.6\n\n\n21_4549\n0.2\n\n\n22_1519\n0.4\n\n\n22_2024\n4.1\n\n\n22_2529\n24.0\n\n\n22_3034\n73.5\n\n\n22_3539\n44.1\n\n\n22_4044\n8.0\n\n\n22_4549\n0.2\n\n\n\n\n\n\n\n새로운 변수명 설정\n0으로 되어 있던 변수를 모의 연령별출산율을 의미하는 birth_rate로 표시 맨 첫 번째 열 이름이 지정되어 있지 않아서 year이라는 변수로 지정하기 위해 reset_index 사용 rest_index 사용시 기존의 인덱스가 새로운 열로 추가되고, 새로운 기본 인덱스가 생성됨\n\nbr2 = br2.rename(columns = {0 : 'birth_rate'})\nbr2 = br2.rename_axis(columns = {'' : 'year'}, index = None)\nbr2\nbr2 = br2.reset_index().rename(columns={'index': 'year'})\n\n청년층과 비청년층을 구분하고자 조건에 따라 값을 선택할 수 있는 np.where 함수 사용 number라는 변수에 청년층 (20-34세) 데이터를 1로 할당하고 그렇지 않은 경우 2로 할당\n\nbr2['number'] = np.where(br2['year']\\\n                  .isin(['20_2024', '20_2529', '20_3034', '21_2024', '21_2529', '21_3034', '22_2024', '22_2529', '22_3034']), 1, 2)\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\nnumber\n\n\n\n\n0\n20_1519\n0.7\n2\n\n\n1\n20_2024\n6.2\n1\n\n\n2\n20_2529\n30.6\n1\n\n\n3\n20_3034\n78.9\n1\n\n\n4\n20_3539\n42.3\n2\n\n\n5\n20_4044\n7.1\n2\n\n\n6\n20_4549\n0.2\n2\n\n\n7\n21_1519\n0.4\n2\n\n\n8\n21_2024\n5.0\n1\n\n\n9\n21_2529\n27.5\n1\n\n\n10\n21_3034\n76.1\n1\n\n\n11\n21_3539\n43.5\n2\n\n\n12\n21_4044\n7.6\n2\n\n\n13\n21_4549\n0.2\n2\n\n\n14\n22_1519\n0.4\n2\n\n\n15\n22_2024\n4.1\n1\n\n\n16\n22_2529\n24.0\n1\n\n\n17\n22_3034\n73.5\n1\n\n\n18\n22_3539\n44.1\n2\n\n\n19\n22_4044\n8.0\n2\n\n\n20\n22_4549\n0.2\n2\n\n\n\n\n\n\n\n청년, 비청년 출산율비교 청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n결과값: 2020년부터 2022년도까지의 청년(20-34) 모의 출산율: 36.211, 2020년부터 2022년도까지의 비청년(15-19, 35-49) 모의 출산율: 12.891\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nbr2_youth_rate\nbr2_non_youth_rate\n\nnp.float64(12.891666666666666)\n\n\n20-22와 같은 코드로 12-14년도 청년층과 비청년층 출산율 비교\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\nbr3\n\nbr3 = br3.transpose()\nbr3.info\nbr3\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), '1', '2')\nbr3\n\nbr3.info()\nbr3['number'] = br3['number'].apply(pd.to_numeric)\nbr3\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nbr3_youth_rate\nbr3_non_youth_rate\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 20 entries, 0 to 19\nData columns (total 3 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   year        20 non-null     object \n 1   birth_rate  20 non-null     float64\n 2   number      20 non-null     object \ndtypes: float64(1), object(2)\nmemory usage: 612.0+ bytes\n\n\nnp.float64(12.909090909090908)\n\n\n그래프 표현 12-14년도와 20-22년도도 청년층과 비청년층의 출산율 비교를 위해 막대 그래프로 표현 X축에 분류 기준을 입력한 후, y 축에는 출생율 평균 삽입입\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.barplot(x=['12_14Youth', '20_22Youth','12_14Non-Youth', '20_22Non-Youth'], y=[br3_youth_rate,br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate])\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()\n\n\n\n\n\n\n\n\n지금 청년층의 출산율이 낮아지는데 지역별로 청년층의 출산율 감소 근황을 보자\n**\n\nbr[['시군구별', \"mean20\"]].sort_values(\"mean20\", ascending = False).head()\nbr[['시군구별', \"mean21\"]].sort_values(\"mean21\", ascending = False).head()\nbr[['시군구별', \"mean22\"]].sort_values(\"mean22\", ascending = False).head()\n\nbr[['시군구별', \"mean20\"]].sort_values(\"mean20\").head()\nbr[['시군구별', \"mean21\"]].sort_values(\"mean21\").head()\nbr[['시군구별', \"mean22\"]].sort_values(\"mean22\").head()\n\n\n\n\n\n\n\n\n시군구별\nmean22\n\n\n\n\n1\n서울특별시\n21.600000\n\n\n2\n부산광역시\n30.900000\n\n\n4\n인천광역시\n32.233333\n\n\n0\n전국\n33.866667\n\n\n3\n대구광역시\n34.100000\n\n\n\n\n\n\n\n각 도시 청년층의 평균모의출산율 그래프\n\nimport matplotlib.pyplot as plt\nplt.clf()\nbr[\"mean20\"].plot.bar()\nplt.show()\n\n\n\n\n\n\n\n\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n\nimport matplotlib.pyplot as plt\nplt.clf()\nbr[\"mean21\"].plot.bar()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nplt.clf()\nbr[\"mean22\"].plot.bar()\nplt.show()"
  },
  {
    "objectID": "posts/hw4/hw4.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "href": "posts/hw4/hw4.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "title": "project1 - 기역조",
    "section": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?",
    "text": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?\n20-22년도 데이터 추출\n\n전국 모의연령별 출산율 비교를 위한 iloc 활용\n기간: 2020~2022\n그룹: 청년 / 비청년\n\n\nbr2 = br.iloc[[0]]\ntype(br2[\"21_2024\"][0])\nbr2.info()\nbr2 = br2.iloc[:, 57:78] \n\n\nbr2\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 1 entries, 0 to 0\nData columns (total 92 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   시군구별       1 non-null      object \n 1   12_1519    1 non-null      float64\n 2   12_2024    1 non-null      float64\n 3   12_2529    1 non-null      float64\n 4   12_3034    1 non-null      float64\n 5   12_3539    1 non-null      float64\n 6   12_4044    1 non-null      float64\n 7   12_4549    1 non-null      float64\n 8   13_1519    1 non-null      float64\n 9   13_2024    1 non-null      float64\n 10  13_2529    1 non-null      float64\n 11  13_3034    1 non-null      float64\n 12  13_3539    1 non-null      float64\n 13  13_4044    1 non-null      float64\n 14  13_4549    1 non-null      float64\n 15  14_1519    1 non-null      float64\n 16  14_2024    1 non-null      float64\n 17  14_2529    1 non-null      float64\n 18  14_3034    1 non-null      float64\n 19  14_3539    1 non-null      float64\n 20  14_4044    1 non-null      float64\n 21  14_4549    1 non-null      float64\n 22  15_1519    1 non-null      float64\n 23  15_2024    1 non-null      float64\n 24  15_2529    1 non-null      float64\n 25  15_3034    1 non-null      float64\n 26  15_3539    1 non-null      float64\n 27  15_4044    1 non-null      float64\n 28  15_4549    1 non-null      float64\n 29  16_1519    1 non-null      float64\n 30  16_2024    1 non-null      float64\n 31  16_2529    1 non-null      float64\n 32  16_3034    1 non-null      float64\n 33  16_3539    1 non-null      float64\n 34  16_4044    1 non-null      float64\n 35  16_4549    1 non-null      float64\n 36  17_1519    1 non-null      float64\n 37  17_2024    1 non-null      float64\n 38  17_2529    1 non-null      float64\n 39  17_3034    1 non-null      float64\n 40  17_3539    1 non-null      float64\n 41  17_4044    1 non-null      float64\n 42  17_4549    1 non-null      float64\n 43  18_1519    1 non-null      float64\n 44  18_2024    1 non-null      float64\n 45  18_2529    1 non-null      float64\n 46  18_3034    1 non-null      float64\n 47  18_3539    1 non-null      float64\n 48  18_4044    1 non-null      float64\n 49  18_4549    1 non-null      float64\n 50  19_1519    1 non-null      float64\n 51  19_2024    1 non-null      float64\n 52  19_2529    1 non-null      float64\n 53  19_3034    1 non-null      float64\n 54  19_3539    1 non-null      float64\n 55  19_4044    1 non-null      float64\n 56  19_4549    1 non-null      float64\n 57  20_1519    1 non-null      float64\n 58  20_2024    1 non-null      float64\n 59  20_2529    1 non-null      float64\n 60  20_3034    1 non-null      float64\n 61  20_3539    1 non-null      float64\n 62  20_4044    1 non-null      float64\n 63  20_4549    1 non-null      float64\n 64  21_1519    1 non-null      float64\n 65  21_2024    1 non-null      float64\n 66  21_2529    1 non-null      float64\n 67  21_3034    1 non-null      float64\n 68  21_3539    1 non-null      float64\n 69  21_4044    1 non-null      float64\n 70  21_4549    1 non-null      float64\n 71  22_1519    1 non-null      float64\n 72  22_2024    1 non-null      float64\n 73  22_2529    1 non-null      float64\n 74  22_3034    1 non-null      float64\n 75  22_3539    1 non-null      float64\n 76  22_4044    1 non-null      float64\n 77  22_4549    1 non-null      float64\n 78  mean20     1 non-null      float64\n 79  mean21     1 non-null      float64\n 80  mean22     1 non-null      float64\n 81  compare12  1 non-null      object \n 82  compare13  1 non-null      object \n 83  compare14  1 non-null      object \n 84  compare15  1 non-null      object \n 85  compare16  1 non-null      object \n 86  compare17  1 non-null      object \n 87  compare18  1 non-null      object \n 88  compare19  1 non-null      object \n 89  compare20  1 non-null      object \n 90  compare21  1 non-null      object \n 91  compare22  1 non-null      object \ndtypes: float64(80), object(12)\nmemory usage: 852.0+ bytes\n\n\n\n\n\n\n\n\n\n20_1519\n20_2024\n20_2529\n20_3034\n20_3539\n20_4044\n20_4549\n21_1519\n21_2024\n21_2529\n...\n21_3539\n21_4044\n21_4549\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\n\n\n\n\n0\n0.7\n6.2\n30.6\n78.9\n42.3\n7.1\n0.2\n0.4\n5.0\n27.5\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n\n\n1 rows × 21 columns\n\n\n\n보기 쉽게 만들기 위해 행렬을 뒤집는 transpose 함수 사용\n\nbr2 = br2.transpose()\nbr2\n\n\n\n\n\n\n\n\n0\n\n\n\n\n20_1519\n0.7\n\n\n20_2024\n6.2\n\n\n20_2529\n30.6\n\n\n20_3034\n78.9\n\n\n20_3539\n42.3\n\n\n20_4044\n7.1\n\n\n20_4549\n0.2\n\n\n21_1519\n0.4\n\n\n21_2024\n5.0\n\n\n21_2529\n27.5\n\n\n21_3034\n76.1\n\n\n21_3539\n43.5\n\n\n21_4044\n7.6\n\n\n21_4549\n0.2\n\n\n22_1519\n0.4\n\n\n22_2024\n4.1\n\n\n22_2529\n24.0\n\n\n22_3034\n73.5\n\n\n22_3539\n44.1\n\n\n22_4044\n8.0\n\n\n22_4549\n0.2\n\n\n\n\n\n\n\n새로운 변수명 설정\n\n0 -&gt; birth_rate(모의연령별 출산율)\n비어있는열 -&gt; year\n\n\nbr2 = br2.rename(columns = {0 : 'birth_rate'})\nbr2 = br2.rename_axis(columns = {'' : 'year'}, index = None)\nbr2\nbr2 = br2.reset_index().rename(columns={'index': 'year'})\n\nnp.where함수로 청년층과 비청년층 구분\n\n청년층: 1, 비청년층: 2 할당\n\n\nbr2['number'] = np.where(br2['year']\\\n                  .isin(['20_2024', '20_2529', '20_3034', '21_2024', '21_2529', '21_3034', '22_2024', '22_2529', '22_3034']), 1, 2)\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\nnumber\n\n\n\n\n0\n20_1519\n0.7\n2\n\n\n1\n20_2024\n6.2\n1\n\n\n2\n20_2529\n30.6\n1\n\n\n3\n20_3034\n78.9\n1\n\n\n4\n20_3539\n42.3\n2\n\n\n5\n20_4044\n7.1\n2\n\n\n6\n20_4549\n0.2\n2\n\n\n7\n21_1519\n0.4\n2\n\n\n8\n21_2024\n5.0\n1\n\n\n9\n21_2529\n27.5\n1\n\n\n10\n21_3034\n76.1\n1\n\n\n11\n21_3539\n43.5\n2\n\n\n12\n21_4044\n7.6\n2\n\n\n13\n21_4549\n0.2\n2\n\n\n14\n22_1519\n0.4\n2\n\n\n15\n22_2024\n4.1\n1\n\n\n16\n22_2529\n24.0\n1\n\n\n17\n22_3034\n73.5\n1\n\n\n18\n22_3539\n44.1\n2\n\n\n19\n22_4044\n8.0\n2\n\n\n20\n22_4549\n0.2\n2\n\n\n\n\n\n\n\n\n청년, 비청년 출산율비교\n20~22년 청년 비청년 모의 출산율\n청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br2_youth_rate)\nprint('비청년: ', br2_non_youth_rate)\n\n청년:  36.21111111111111\n비청년:  12.891666666666666\n\n\n12~14년 청년 비청년 모의 출산율\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\n\nbr3 = br3.transpose()\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), 1, 2)\n\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br3_youth_rate)\nprint('비청년: ', br3_non_youth_rate)\n\n청년:  66.32222222222222\n비청년:  12.909090909090908\n\n\n그래프 표현\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ncolors = ['orchid', 'lightpink', 'palevioletred', 'hotpink', 'plum', 'thistle']\n\nsns.barplot(x=['12_14Youth', '20_22Youth','12_14Non-Youth', '20_22Non-Youth'], y=[br3_youth_rate,br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate], palette=colors)\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_12820\\2817311611.py:5: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_12820\\2817311611.py:5: UserWarning:\n\nThe palette list has more values (6) than needed (4), which may not be intended."
  },
  {
    "objectID": "posts/hw4/hw4.html#결과",
    "href": "posts/hw4/hw4.html#결과",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n- 과거대비 청년층의 출산율 감소\n- 비청년층 출산율 변화 없음"
  },
  {
    "objectID": "posts/hw4/hw4.html#청년-비청년-출산율비교",
    "href": "posts/hw4/hw4.html#청년-비청년-출산율비교",
    "title": "project1 - 기역조",
    "section": "청년, 비청년 출산율비교",
    "text": "청년, 비청년 출산율비교\n20~22년 청년 비청년 모의 출산율\n청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n결과값: 2020년부터 2022년도까지의 청년(20-34) 모의 출산율: 36.211, 2020년부터 2022년도까지의 비청년(15-19, 35-49) 모의 출산율: 12.891\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nprint(br2_youth_rate)\nprint(br2_non_youth_rate)\n\n36.21111111111111\n12.891666666666666\n\n\n20-22와 같은 코드로 12-14년도 청년층과 비청년층 출산율 비교\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\nbr3\n\nbr3 = br3.transpose()\nbr3.info\nbr3\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), '1', '2')\nbr3\n\nbr3.info()\nbr3['number'] = br3['number'].apply(pd.to_numeric)\nbr3\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nbr3_youth_rate\nbr3_non_youth_rate\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 20 entries, 0 to 19\nData columns (total 3 columns):\n #   Column      Non-Null Count  Dtype  \n---  ------      --------------  -----  \n 0   year        20 non-null     object \n 1   birth_rate  20 non-null     float64\n 2   number      20 non-null     object \ndtypes: float64(1), object(2)\nmemory usage: 612.0+ bytes\n\n\nnp.float64(12.909090909090908)\n\n\n그래프 표현 12-14년도와 20-22년도도 청년층과 비청년층의 출산율 비교를 위해 막대 그래프로 표현 X축에 분류 기준을 입력한 후, y 축에는 출생율 평균 삽입입\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nsns.barplot(x=['12_14Youth', '20_22Youth','12_14Non-Youth', '20_22Non-Youth'], y=[br3_youth_rate,br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate])\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()"
  },
  {
    "objectID": "posts/hw4/hw4.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "href": "posts/hw4/hw4.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "title": "project1 - 기역조",
    "section": "Q 전국 평균 대비 시도별 청년층의 출산율 비교",
    "text": "Q 전국 평균 대비 시도별 청년층의 출산율 비교\n청년층의 출산율이 높은 지역 상위5 & 하위5\n\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\", ascending = False).head(), \"\\n\", \"--------------------------\")\n\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\").head())\n\n       시군구별     mean20\n8   세종특별자치시  64.233333\n14     전라남도  56.266667\n12     충청남도  52.100000\n10      강원도  51.300000\n7     울산광역시  49.700000 \n -------------------------\n       시군구별     mean21\n8   세종특별자치시  63.000000\n14     전라남도  49.333333\n10      강원도  47.566667\n12     충청남도  47.533333\n15     경상북도  46.733333 \n -------------------------\n       시군구별     mean22\n8   세종특별자치시  53.066667\n10      강원도  46.033333\n14     전라남도  45.600000\n15     경상북도  44.500000\n12     충청남도  44.400000 \n --------------------------\n    시군구별     mean20\n1  서울특별시  25.700000\n2  부산광역시  33.933333\n5  광주광역시  37.233333\n6  대전광역시  37.366667\n4  인천광역시  38.033333 \n --------------------------\n    시군구별     mean21\n1  서울특별시  23.833333\n2  부산광역시  31.633333\n4  인천광역시  34.600000\n3  대구광역시  35.466667\n0     전국  36.200000 \n --------------------------\n    시군구별     mean22\n1  서울특별시  21.600000\n2  부산광역시  30.900000\n4  인천광역시  32.233333\n0     전국  33.866667\n3  대구광역시  34.100000\n\n\n각 도시 청년층의 평균모의출산율 그래프\n\nimport seaborn as sns\nnew = br[['시군구별', 'mean20']].sort_values(\"mean20\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean20', palette=colors)\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2020', fontsize=12)\nplt.title('Mean Birth Rate  2020년도 시군구별 ', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_12820\\3300698570.py:4: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_12820\\3300698570.py:4: UserWarning:\n\n\nThe palette list has fewer values (6) than needed (18) and will cycle, which may produce an uninterpretable plot.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44400 (\\N{HANGUL SYLLABLE GUN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49464 (\\N{HANGUL SYLLABLE SE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 53945 (\\N{HANGUL SYLLABLE TEUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51088 (\\N{HANGUL SYLLABLE JA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52824 (\\N{HANGUL SYLLABLE CI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46972 (\\N{HANGUL SYLLABLE RA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52649 (\\N{HANGUL SYLLABLE CUNG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52397 (\\N{HANGUL SYLLABLE CEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50872 (\\N{HANGUL SYLLABLE UL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50669 (\\N{HANGUL SYLLABLE YEOG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44221 (\\N{HANGUL SYLLABLE GYEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51228 (\\N{HANGUL SYLLABLE JE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51452 (\\N{HANGUL SYLLABLE JU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44397 (\\N{HANGUL SYLLABLE GUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from font(s) DejaVu Sans.\n\n\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean21']].sort_values(\"mean21\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean21', palette=colors)\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2021', fontsize=12)\nplt.title('Mean Birth Rate  2021년도 시군구별 ', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_12820\\2780248488.py:3: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_12820\\2780248488.py:3: UserWarning:\n\n\nThe palette list has fewer values (6) than needed (18) and will cycle, which may produce an uninterpretable plot.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44400 (\\N{HANGUL SYLLABLE GUN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49464 (\\N{HANGUL SYLLABLE SE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 53945 (\\N{HANGUL SYLLABLE TEUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51088 (\\N{HANGUL SYLLABLE JA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52824 (\\N{HANGUL SYLLABLE CI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46972 (\\N{HANGUL SYLLABLE RA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52649 (\\N{HANGUL SYLLABLE CUNG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52397 (\\N{HANGUL SYLLABLE CEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44221 (\\N{HANGUL SYLLABLE GYEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50872 (\\N{HANGUL SYLLABLE UL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50669 (\\N{HANGUL SYLLABLE YEOG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51228 (\\N{HANGUL SYLLABLE JE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51452 (\\N{HANGUL SYLLABLE JU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44397 (\\N{HANGUL SYLLABLE GUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from font(s) DejaVu Sans.\n\n\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean22']].sort_values(\"mean22\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean22', palette=colors)\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2022', fontsize=12)\nplt.title('Mean Birth Rate  2022년도 시군구별 ', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_12820\\1985628693.py:3: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_12820\\1985628693.py:3: UserWarning:\n\n\nThe palette list has fewer values (6) than needed (18) and will cycle, which may produce an uninterpretable plot.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44400 (\\N{HANGUL SYLLABLE GUN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49464 (\\N{HANGUL SYLLABLE SE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 53945 (\\N{HANGUL SYLLABLE TEUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51088 (\\N{HANGUL SYLLABLE JA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52824 (\\N{HANGUL SYLLABLE CI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46972 (\\N{HANGUL SYLLABLE RA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44221 (\\N{HANGUL SYLLABLE GYEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52649 (\\N{HANGUL SYLLABLE CUNG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52397 (\\N{HANGUL SYLLABLE CEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50872 (\\N{HANGUL SYLLABLE UL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50669 (\\N{HANGUL SYLLABLE YEOG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51228 (\\N{HANGUL SYLLABLE JE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51452 (\\N{HANGUL SYLLABLE JU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44397 (\\N{HANGUL SYLLABLE GUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from font(s) DejaVu Sans."
  },
  {
    "objectID": "posts/hw4/hw4.html#결과-1",
    "href": "posts/hw4/hw4.html#결과-1",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n\n가장 높은 출산율을 보여주는 도시 = 세종특별자치시\n가장 낮은 출산율을 보여주는 도시 = 서울특별시\n\n\n총론"
  },
  {
    "objectID": "posts/proj1/hw4.html",
    "href": "posts/proj1/hw4.html",
    "title": "project1 - 기역조",
    "section": "",
    "text": "대한민국 연령별, 지역별 출생율 비교분석"
  },
  {
    "objectID": "posts/proj1/hw4.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "href": "posts/proj1/hw4.html#q-8년동안-청년층과-비청년층-사이에-출산율이-어떻게-변했을까",
    "title": "project1 - 기역조",
    "section": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?",
    "text": "Q 8년동안 청년층과 비청년층 사이에 출산율이 어떻게 변했을까?\n20-22년도 데이터 추출\n\n전국 모의연령별 출산율 비교를 위한 iloc 활용\n기간: 2020~2022\n그룹: 청년 / 비청년\n\n\nbr2 = br.iloc[[0]]\ntype(br2[\"21_2024\"][0])\nbr2.info()\nbr2 = br2.iloc[:, 57:78] \n\n\nbr2\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nIndex: 1 entries, 0 to 0\nData columns (total 92 columns):\n #   Column     Non-Null Count  Dtype  \n---  ------     --------------  -----  \n 0   시군구별       1 non-null      object \n 1   12_1519    1 non-null      float64\n 2   12_2024    1 non-null      float64\n 3   12_2529    1 non-null      float64\n 4   12_3034    1 non-null      float64\n 5   12_3539    1 non-null      float64\n 6   12_4044    1 non-null      float64\n 7   12_4549    1 non-null      float64\n 8   13_1519    1 non-null      float64\n 9   13_2024    1 non-null      float64\n 10  13_2529    1 non-null      float64\n 11  13_3034    1 non-null      float64\n 12  13_3539    1 non-null      float64\n 13  13_4044    1 non-null      float64\n 14  13_4549    1 non-null      float64\n 15  14_1519    1 non-null      float64\n 16  14_2024    1 non-null      float64\n 17  14_2529    1 non-null      float64\n 18  14_3034    1 non-null      float64\n 19  14_3539    1 non-null      float64\n 20  14_4044    1 non-null      float64\n 21  14_4549    1 non-null      float64\n 22  15_1519    1 non-null      float64\n 23  15_2024    1 non-null      float64\n 24  15_2529    1 non-null      float64\n 25  15_3034    1 non-null      float64\n 26  15_3539    1 non-null      float64\n 27  15_4044    1 non-null      float64\n 28  15_4549    1 non-null      float64\n 29  16_1519    1 non-null      float64\n 30  16_2024    1 non-null      float64\n 31  16_2529    1 non-null      float64\n 32  16_3034    1 non-null      float64\n 33  16_3539    1 non-null      float64\n 34  16_4044    1 non-null      float64\n 35  16_4549    1 non-null      float64\n 36  17_1519    1 non-null      float64\n 37  17_2024    1 non-null      float64\n 38  17_2529    1 non-null      float64\n 39  17_3034    1 non-null      float64\n 40  17_3539    1 non-null      float64\n 41  17_4044    1 non-null      float64\n 42  17_4549    1 non-null      float64\n 43  18_1519    1 non-null      float64\n 44  18_2024    1 non-null      float64\n 45  18_2529    1 non-null      float64\n 46  18_3034    1 non-null      float64\n 47  18_3539    1 non-null      float64\n 48  18_4044    1 non-null      float64\n 49  18_4549    1 non-null      float64\n 50  19_1519    1 non-null      float64\n 51  19_2024    1 non-null      float64\n 52  19_2529    1 non-null      float64\n 53  19_3034    1 non-null      float64\n 54  19_3539    1 non-null      float64\n 55  19_4044    1 non-null      float64\n 56  19_4549    1 non-null      float64\n 57  20_1519    1 non-null      float64\n 58  20_2024    1 non-null      float64\n 59  20_2529    1 non-null      float64\n 60  20_3034    1 non-null      float64\n 61  20_3539    1 non-null      float64\n 62  20_4044    1 non-null      float64\n 63  20_4549    1 non-null      float64\n 64  21_1519    1 non-null      float64\n 65  21_2024    1 non-null      float64\n 66  21_2529    1 non-null      float64\n 67  21_3034    1 non-null      float64\n 68  21_3539    1 non-null      float64\n 69  21_4044    1 non-null      float64\n 70  21_4549    1 non-null      float64\n 71  22_1519    1 non-null      float64\n 72  22_2024    1 non-null      float64\n 73  22_2529    1 non-null      float64\n 74  22_3034    1 non-null      float64\n 75  22_3539    1 non-null      float64\n 76  22_4044    1 non-null      float64\n 77  22_4549    1 non-null      float64\n 78  mean20     1 non-null      float64\n 79  mean21     1 non-null      float64\n 80  mean22     1 non-null      float64\n 81  compare12  1 non-null      object \n 82  compare13  1 non-null      object \n 83  compare14  1 non-null      object \n 84  compare15  1 non-null      object \n 85  compare16  1 non-null      object \n 86  compare17  1 non-null      object \n 87  compare18  1 non-null      object \n 88  compare19  1 non-null      object \n 89  compare20  1 non-null      object \n 90  compare21  1 non-null      object \n 91  compare22  1 non-null      object \ndtypes: float64(80), object(12)\nmemory usage: 852.0+ bytes\n\n\n\n\n\n\n\n\n\n20_1519\n20_2024\n20_2529\n20_3034\n20_3539\n20_4044\n20_4549\n21_1519\n21_2024\n21_2529\n...\n21_3539\n21_4044\n21_4549\n22_1519\n22_2024\n22_2529\n22_3034\n22_3539\n22_4044\n22_4549\n\n\n\n\n0\n0.7\n6.2\n30.6\n78.9\n42.3\n7.1\n0.2\n0.4\n5.0\n27.5\n...\n43.5\n7.6\n0.2\n0.4\n4.1\n24.0\n73.5\n44.1\n8.0\n0.2\n\n\n\n\n1 rows × 21 columns\n\n\n\n보기 쉽게 만들기 위해 행렬을 뒤집는 transpose 함수 사용\n\nbr2 = br2.transpose()\nbr2\n\n\n\n\n\n\n\n\n0\n\n\n\n\n20_1519\n0.7\n\n\n20_2024\n6.2\n\n\n20_2529\n30.6\n\n\n20_3034\n78.9\n\n\n20_3539\n42.3\n\n\n20_4044\n7.1\n\n\n20_4549\n0.2\n\n\n21_1519\n0.4\n\n\n21_2024\n5.0\n\n\n21_2529\n27.5\n\n\n21_3034\n76.1\n\n\n21_3539\n43.5\n\n\n21_4044\n7.6\n\n\n21_4549\n0.2\n\n\n22_1519\n0.4\n\n\n22_2024\n4.1\n\n\n22_2529\n24.0\n\n\n22_3034\n73.5\n\n\n22_3539\n44.1\n\n\n22_4044\n8.0\n\n\n22_4549\n0.2\n\n\n\n\n\n\n\n새로운 변수명 설정\n\n0 -&gt; birth_rate(모의연령별 출산율)\n비어있는열 -&gt; year\n\n\nbr2 = br2.rename(columns = {0 : 'birth_rate'})\nbr2 = br2.rename_axis(columns = {'' : 'year'}, index = None)\nbr2 = br2.reset_index().rename(columns={'index': 'year'})\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\n\n\n\n\n0\n20_1519\n0.7\n\n\n1\n20_2024\n6.2\n\n\n2\n20_2529\n30.6\n\n\n3\n20_3034\n78.9\n\n\n4\n20_3539\n42.3\n\n\n5\n20_4044\n7.1\n\n\n6\n20_4549\n0.2\n\n\n7\n21_1519\n0.4\n\n\n8\n21_2024\n5.0\n\n\n9\n21_2529\n27.5\n\n\n10\n21_3034\n76.1\n\n\n11\n21_3539\n43.5\n\n\n12\n21_4044\n7.6\n\n\n13\n21_4549\n0.2\n\n\n14\n22_1519\n0.4\n\n\n15\n22_2024\n4.1\n\n\n16\n22_2529\n24.0\n\n\n17\n22_3034\n73.5\n\n\n18\n22_3539\n44.1\n\n\n19\n22_4044\n8.0\n\n\n20\n22_4549\n0.2\n\n\n\n\n\n\n\nnp.where함수로 청년층과 비청년층 구분\n\n청년층: 1, 비청년층: 2 할당\n\n\nbr2['number'] = np.where(br2['year']\\\n                  .isin(['20_2024', '20_2529', '20_3034', '21_2024', '21_2529', '21_3034', '22_2024', '22_2529', '22_3034']), 1, 2)\nbr2\n\n\n\n\n\n\n\n\nyear\nbirth_rate\nnumber\n\n\n\n\n0\n20_1519\n0.7\n2\n\n\n1\n20_2024\n6.2\n1\n\n\n2\n20_2529\n30.6\n1\n\n\n3\n20_3034\n78.9\n1\n\n\n4\n20_3539\n42.3\n2\n\n\n5\n20_4044\n7.1\n2\n\n\n6\n20_4549\n0.2\n2\n\n\n7\n21_1519\n0.4\n2\n\n\n8\n21_2024\n5.0\n1\n\n\n9\n21_2529\n27.5\n1\n\n\n10\n21_3034\n76.1\n1\n\n\n11\n21_3539\n43.5\n2\n\n\n12\n21_4044\n7.6\n2\n\n\n13\n21_4549\n0.2\n2\n\n\n14\n22_1519\n0.4\n2\n\n\n15\n22_2024\n4.1\n1\n\n\n16\n22_2529\n24.0\n1\n\n\n17\n22_3034\n73.5\n1\n\n\n18\n22_3539\n44.1\n2\n\n\n19\n22_4044\n8.0\n2\n\n\n20\n22_4549\n0.2\n2\n\n\n\n\n\n\n\n\n청년, 비청년 출산율비교\n20~22년 청년 비청년 모의 출산율\n청년층의 출산율을 알아보기 위해서는 br2 데이터에서 number == 1를 추출하여 평균을 구함 비청년도 같은 방식으로 진행\n\nbr2_youth_rate = br2.query('number == 1')['birth_rate'].mean()\nbr2_non_youth_rate = br2.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br2_youth_rate)\nprint('비청년: ', br2_non_youth_rate)\n\n청년:  36.21111111111111\n비청년:  12.891666666666666\n\n\n12~14년 청년 비청년 모의 출산율\n\nbr3= br.iloc[:, 1:21] ## 12-14년도 데이터 추출\nbr3 = br3.iloc[[0]]\n\nbr3 = br3.transpose()\n\nbr3 = br3.rename(columns = {0 : 'birth_rate'})\nbr3 = br3.rename_axis(columns = {'' : 'year'}, index = None)\nbr3 = br3.reset_index().rename(columns={'index': 'year'})\n\nbr3['number'] = np.where(br3['year']\\\n                  .isin(['12_2024', '12_2529', '12_3034', '13_2024', '13_2529', '13_3034', '14_2024', '14_2529', '14_3034']), 1, 2)\n\n\nbr3_youth_rate = br3.query('number == 1')['birth_rate'].mean()\nbr3_non_youth_rate = br3.query('number == 2')['birth_rate'].mean()\n\nprint('청년: ', br3_youth_rate)\nprint('비청년: ', br3_non_youth_rate)\n\n청년:  66.32222222222222\n비청년:  12.909090909090908\n\n\n그래프 표현\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ncolors = ['orchid', 'lightpink', 'palevioletred', 'hotpink', 'plum', 'thistle']\n\nsns.barplot(x=['12_14Youth', '20_22Youth','12_14Non-Youth', '20_22Non-Youth'], y=[br3_youth_rate,br2_youth_rate, br3_non_youth_rate, br2_non_youth_rate], palette=colors)\nplt.xlabel('Age Group', fontsize=12)\nplt.ylabel('Mean Birth Rate', fontsize=12)\nplt.title('12-14/20-22 Mean Birth Rate Comparison', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_6692\\2817311611.py:5: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_6692\\2817311611.py:5: UserWarning:\n\nThe palette list has more values (6) than needed (4), which may not be intended."
  },
  {
    "objectID": "posts/proj1/hw4.html#결과",
    "href": "posts/proj1/hw4.html#결과",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n- 과거대비 청년층의 출산율 감소\n- 비청년층 출산율 변화 없음\n- 장기적으로 사회구조 문제 발생"
  },
  {
    "objectID": "posts/proj1/hw4.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "href": "posts/proj1/hw4.html#q-전국-평균-대비-시도별-청년층의-출산율-비교",
    "title": "project1 - 기역조",
    "section": "Q 전국 평균 대비 시도별 청년층의 출산율 비교",
    "text": "Q 전국 평균 대비 시도별 청년층의 출산율 비교\n청년층의 출산율이 높은 지역 상위5 & 하위5\n\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\", ascending = False).head(), \"\\n\", \"-------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\", ascending = False).head(), \"\\n\", \"--------------------------\")\n\nprint(br[['시군구별', \"mean20\"]].sort_values(\"mean20\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean21\"]].sort_values(\"mean21\").head(), \"\\n\", \"--------------------------\")\nprint(br[['시군구별', \"mean22\"]].sort_values(\"mean22\").head())\n\n       시군구별     mean20\n8   세종특별자치시  64.233333\n14     전라남도  56.266667\n12     충청남도  52.100000\n10      강원도  51.300000\n7     울산광역시  49.700000 \n -------------------------\n       시군구별     mean21\n8   세종특별자치시  63.000000\n14     전라남도  49.333333\n10      강원도  47.566667\n12     충청남도  47.533333\n15     경상북도  46.733333 \n -------------------------\n       시군구별     mean22\n8   세종특별자치시  53.066667\n10      강원도  46.033333\n14     전라남도  45.600000\n15     경상북도  44.500000\n12     충청남도  44.400000 \n --------------------------\n    시군구별     mean20\n1  서울특별시  25.700000\n2  부산광역시  33.933333\n5  광주광역시  37.233333\n6  대전광역시  37.366667\n4  인천광역시  38.033333 \n --------------------------\n    시군구별     mean21\n1  서울특별시  23.833333\n2  부산광역시  31.633333\n4  인천광역시  34.600000\n3  대구광역시  35.466667\n0     전국  36.200000 \n --------------------------\n    시군구별     mean22\n1  서울특별시  21.600000\n2  부산광역시  30.900000\n4  인천광역시  32.233333\n0     전국  33.866667\n3  대구광역시  34.100000\n\n\n각 도시 청년층의 평균모의출산율 그래프\n\nimport seaborn as sns\nnew = br[['시군구별', 'mean20']].sort_values(\"mean20\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean20', palette=colors)\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2020', fontsize=12)\nplt.title('Mean Birth Rate  2020년도 시군구별 ', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_6692\\3300698570.py:4: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_6692\\3300698570.py:4: UserWarning:\n\n\nThe palette list has fewer values (6) than needed (18) and will cycle, which may produce an uninterpretable plot.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44400 (\\N{HANGUL SYLLABLE GUN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49464 (\\N{HANGUL SYLLABLE SE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 53945 (\\N{HANGUL SYLLABLE TEUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51088 (\\N{HANGUL SYLLABLE JA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52824 (\\N{HANGUL SYLLABLE CI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46972 (\\N{HANGUL SYLLABLE RA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52649 (\\N{HANGUL SYLLABLE CUNG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52397 (\\N{HANGUL SYLLABLE CEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50872 (\\N{HANGUL SYLLABLE UL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50669 (\\N{HANGUL SYLLABLE YEOG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44221 (\\N{HANGUL SYLLABLE GYEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51228 (\\N{HANGUL SYLLABLE JE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51452 (\\N{HANGUL SYLLABLE JU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44397 (\\N{HANGUL SYLLABLE GUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from font(s) DejaVu Sans.\n\n\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean21']].sort_values(\"mean21\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean21', palette=colors)\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2021', fontsize=12)\nplt.title('Mean Birth Rate  2021년도 시군구별 ', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_6692\\2780248488.py:3: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_6692\\2780248488.py:3: UserWarning:\n\n\nThe palette list has fewer values (6) than needed (18) and will cycle, which may produce an uninterpretable plot.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44400 (\\N{HANGUL SYLLABLE GUN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49464 (\\N{HANGUL SYLLABLE SE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 53945 (\\N{HANGUL SYLLABLE TEUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51088 (\\N{HANGUL SYLLABLE JA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52824 (\\N{HANGUL SYLLABLE CI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46972 (\\N{HANGUL SYLLABLE RA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52649 (\\N{HANGUL SYLLABLE CUNG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52397 (\\N{HANGUL SYLLABLE CEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44221 (\\N{HANGUL SYLLABLE GYEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50872 (\\N{HANGUL SYLLABLE UL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50669 (\\N{HANGUL SYLLABLE YEOG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51228 (\\N{HANGUL SYLLABLE JE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51452 (\\N{HANGUL SYLLABLE JU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44397 (\\N{HANGUL SYLLABLE GUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from font(s) DejaVu Sans.\n\n\n\n\n\n\n\n\n\n\n\nnew = br[['시군구별', 'mean22']].sort_values(\"mean22\", ascending=False)\nplt.figure(figsize=(7, 3))\nsns.barplot(data=new, x='시군구별', y='mean22', palette=colors)\nplt.xticks(rotation=45)  \nplt.xlabel('시군구별', fontsize=12)\nplt.ylabel('Mean Birth Rate 2022', fontsize=12)\nplt.title('Mean Birth Rate  2022년도 시군구별 ', fontsize=15)\nplt.show()\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_6692\\1985628693.py:3: FutureWarning:\n\n\n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n\nC:\\Users\\USER\\AppData\\Local\\Temp\\ipykernel_6692\\1985628693.py:3: UserWarning:\n\n\nThe palette list has fewer values (6) than needed (18) and will cycle, which may produce an uninterpretable plot.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45380 (\\N{HANGUL SYLLABLE NYEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46020 (\\N{HANGUL SYLLABLE DO}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49884 (\\N{HANGUL SYLLABLE SI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44400 (\\N{HANGUL SYLLABLE GUN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44396 (\\N{HANGUL SYLLABLE GU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48324 (\\N{HANGUL SYLLABLE BYEOL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49464 (\\N{HANGUL SYLLABLE SE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51333 (\\N{HANGUL SYLLABLE JONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 53945 (\\N{HANGUL SYLLABLE TEUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51088 (\\N{HANGUL SYLLABLE JA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52824 (\\N{HANGUL SYLLABLE CI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44053 (\\N{HANGUL SYLLABLE GANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50896 (\\N{HANGUL SYLLABLE WEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51204 (\\N{HANGUL SYLLABLE JEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 46972 (\\N{HANGUL SYLLABLE RA}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45224 (\\N{HANGUL SYLLABLE NAM}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44221 (\\N{HANGUL SYLLABLE GYEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49345 (\\N{HANGUL SYLLABLE SANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48513 (\\N{HANGUL SYLLABLE BUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52649 (\\N{HANGUL SYLLABLE CUNG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52397 (\\N{HANGUL SYLLABLE CEONG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50872 (\\N{HANGUL SYLLABLE UL}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49328 (\\N{HANGUL SYLLABLE SAN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44305 (\\N{HANGUL SYLLABLE GWANG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 50669 (\\N{HANGUL SYLLABLE YEOG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51228 (\\N{HANGUL SYLLABLE JE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51452 (\\N{HANGUL SYLLABLE JU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 45824 (\\N{HANGUL SYLLABLE DAE}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 44397 (\\N{HANGUL SYLLABLE GUG}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 51064 (\\N{HANGUL SYLLABLE IN}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 52380 (\\N{HANGUL SYLLABLE CEON}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 48512 (\\N{HANGUL SYLLABLE BU}) missing from font(s) DejaVu Sans.\n\nC:\\Users\\USER\\AppData\\Roaming\\Python\\Python312\\site-packages\\IPython\\core\\pylabtools.py:170: UserWarning:\n\nGlyph 49436 (\\N{HANGUL SYLLABLE SEO}) missing from font(s) DejaVu Sans."
  },
  {
    "objectID": "posts/proj1/hw4.html#결과-1",
    "href": "posts/proj1/hw4.html#결과-1",
    "title": "project1 - 기역조",
    "section": "결과",
    "text": "결과\n\n가장 높은 출산율을 보여주는 도시 = 세종특별자치시\n가장 낮은 출산율을 보여주는 도시 = 서울특별시\n\n\n총론"
  },
  {
    "objectID": "posts/hw4/hw4.html#px-3",
    "href": "posts/hw4/hw4.html#px-3",
    "title": "homework4",
    "section": "1. P(X < 3)",
    "text": "1. P(X &lt; 3)\n\na1 = norm.cdf(3, 2, 3)\n\nprint('확률은 ' + str(a1.round(2)) + '입니다')\n\n확률은 0.63입니다"
  },
  {
    "objectID": "posts/hw4/hw4.html#p2-x-5",
    "href": "posts/hw4/hw4.html#p2-x-5",
    "title": "homework4",
    "section": "2. P(2 < X < 5)",
    "text": "2. P(2 &lt; X &lt; 5)\n\na2 = norm.cdf(5, 2, 3) - norm.cdf(2, 2, 3)\n\nprint('확률은 ' + str(a2.round(2)) + '입니다')\n\n확률은 0.34입니다"
  },
  {
    "objectID": "posts/hw4/hw4.html#px-3-or-x-7",
    "href": "posts/hw4/hw4.html#px-3-or-x-7",
    "title": "homework4",
    "section": "3. P(X < 3 or X > 7)",
    "text": "3. P(X &lt; 3 or X &gt; 7)\n\na3 = norm.cdf(3, 2, 3) + (1 - norm.cdf(7, 2, 3))\n\nprint('확률은 ' + str(a3.round(2)) + '입니다')\n\n확률은 0.68입니다"
  }
]