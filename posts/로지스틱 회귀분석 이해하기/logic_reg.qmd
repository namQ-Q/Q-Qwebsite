---
title: "logic_reg"
author: "강남규"
date: "2024-09-010"
categories: [bigdata]
---

**로지스틱 회귀분석 이해하기**

# 패키지 불러오기
```{python}
import pandas as pd
import numpy as np
from scipy.stats import norm
from sklearn.metrics import confusion_matrix, accuracy_score, f1_score
import statsmodels.api as sm
```

# Q1
**데이터를 로드하고, 로지스틱 회귀모델을 적합하고, 회귀 표를 작성하세요.**

```{python}
df = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/shinydashboard/data/leukemia_remission.csv')
model = sm.formula.logit("REMISS ~ CELL + SMEAR + INFIL + LI + BLAST + TEMP",
                         data=df).fit()
print(model.summary())
```

# Q2

**해당 모델은 통계적으로 유의한가요? 그 이유를 검정통계량를 사용해서 설명하시오.**

유의수준 0.05하에서 LLR p-value가 0.0467로
유의수준보다 작으므로 통계적으로 유의하다.

# Q3

**유의수준 0.2를 기준으로 통계적으로 유의한 변수**

 P>|z|가 0.2보다 작은 변수는 **LI**, **TEMP**

# Q4

**다음 환자에 대한 오즈는 얼마인가요?**

CELL (골수의 세포성): 65%<br>
SMEAR (골수편의 백혈구 비율): 45%<br>
INFIL (골수의 백혈병 세포 침투 비율): 55%<br>
LI (골수 백혈병 세포의 라벨링 인덱스): 1.2<br>
BLAST (말초혈액의 백혈병 세포 수): 1.1 세포/μL<br>
TEMP (치료 시작 전 최고 체온): 0.9<br>

```{python}
coefficients = model.params
my_odds = np.exp(64.2581 +30.8301*0.65 + 24.6863*0.45 -24.9745*0.55 +4.3605*1.2 -0.0115*1.1 -100.1734*0.9)
print(my_odds)
```

# Q5

**위 환자의 혈액에서 백혈병 세포가 관측되지 않은 확률은 얼마인가요?**

```{python}
round(my_odds / (my_odds+1),3)
```

# Q6

**TEMP 변수의 계수는 얼마이며, 해당 계수를 사용해서 TEMP 변수가 백혈병 치료에 대한 영향을 설명하시오.**

계수는 -100.1734
```{python}
odd_ratio = np.exp(-100.1734)
print(odd_ratio)
```

온도가 1단위 증가해도 백혈병 비관측에 대한 오즈가 증가하지 않는다.

# Q7

**CELL 변수의 99% 오즈비에 대한 신뢰구간을 구하시오.**

```{python}
cell_coef = model.params['CELL']
cell_se = model.bse['CELL']
z = norm.ppf(0.995)
lower_bound_coef = cell_coef - z * cell_se
upper_bound_coef = cell_coef + z* cell_se
lower_bound_or = np.exp(lower_bound_coef)
upper_bound_or = np.exp(upper_bound_coef)
print(f"오즈비의 신뢰구간은{lower_bound_or}에서 {upper_bound_or}까지지")
```


# Q8

**주어진 데이터에 대하여 로지스틱 회귀 모델의 예측 확률을 구한 후,**<br>
**50% 이상인 경우 1로 처리하여, 혼동 행렬를 구하시오.**

```{python}
df['predicted'] = model.predict() >= 0.5
from sklearn.metrics import confusion_matrix
conf_matrix = confusion_matrix(df['REMISS'], df['predicted'])
print(conf_matrix)
```


# Q9

**해당 모델의 Accuracy는 얼마인가요?**

```{python}
accuracy = accuracy_score(df['REMISS'], df['predicted'])
print(f'accuracy점수는 {accuracy}입니다.')
```

# Q10

**해당 모델의 F1 Score를 구하세요.*

```{python}
f1 = f1_score(df['REMISS'], df['predicted'])
print(f'f1점수는 {f1}입니다.')
```










